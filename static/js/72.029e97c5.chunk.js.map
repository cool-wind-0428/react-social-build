{"version":3,"sources":["components/map/controls/MapControlFullscreen.js","components/map/controls/MapControlGeolocate.js","components/map/controls/MapControlMarker.js","components/map/controls/MapControlNavigation.js","components/map/controls/MapControlPopup.js","components/map/controls/MapControlScale.js","utils/formatTime.js","../node_modules/date-fns/esm/_lib/cloneObject/index.js","../node_modules/date-fns/esm/formatDistance/index.js","../node_modules/date-fns/esm/formatDistanceToNow/index.js","components/map/map-heatmap/ControlPanel.js","components/map/map-heatmap/index.js"],"names":["FullscreenControlStyle","styled","FullscreenControl","theme","zIndex","borderRadius","overflow","top","spacing","left","boxShadow","customShadows","z8","transform","MapControlFullscreen","other","GeolocateControlStyle","GeolocateControl","MapControlGeolocate","positionOptions","enableHighAccuracy","trackUserLocation","IconStyle","height","stroke","cursor","fill","palette","error","main","MapControlMarker","onClick","viewBox","d","NavigationControlStyle","NavigationControl","bottom","borderTop","divider","MapControlNavigation","PopupStyle","Popup","isRTL","direction","maxWidth","padding","z20","shape","backgroundColor","grey","width","fontSize","opacity","color","common","white","right","outline","marginBottom","borderBottomColor","marginLeft","borderLeftColor","marginTop","borderTopColor","marginRight","borderRightColor","MapControlPopup","children","onClose","tipSize","anchor","closeButton","closeOnClick","RootStyle","position","border","lineHeight","backgroundImage","MapControlScale","sx","unit","fDate","date","format","Date","fDateTime","fDateTimeSuffix","fToNow","formatDistanceToNow","addSuffix","cloneObject","dirtyObject","assign","MINUTES_IN_DAY","MINUTES_IN_MONTH","formatDistance","dirtyDate","dirtyBaseDate","options","arguments","length","undefined","requiredArgs","locale","defaultLocale","RangeError","comparison","compareAsc","isNaN","dateLeft","dateRight","localizeOptions","Boolean","toDate","months","seconds","differenceInSeconds","offsetInSeconds","getTimezoneOffsetInMilliseconds","minutes","Math","round","includeSeconds","hours","days","differenceInMonths","nearestMonth","monthsSinceStartOfYear","years","floor","dirtyOptions","distanceInWords","now","minWidth","backdropFilter","WebkitBackdropFilter","alpha","ControlPanel","startTime","endTime","allDays","selectedTime","onChangeTime","onChangeAllDays","day","selectedDay","Box","display","alignItems","justifyContent","Typography","variant","Switch","size","checked","onChange","event","target","gutterBottom","Slider","min","step","max","disabled","value","daysToAdd","HEATMAP_LAYER","maxzoom","type","paint","MapHeatmap","useState","useAllDays","timeRange","setTimeRange","selectTime","earthquakes","setEarthQuakes","latitude","longitude","zoom","bearing","pitch","viewport","setViewport","useEffect","fetch","then","resp","json","features","properties","time","data","useMemo","featureCollection","year","getFullYear","month","getMonth","getDate","filter","feature","featureDate","filterFeaturesByDay","onViewportChange"],"mappings":"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","file":"static/js/72.029e97c5.chunk.js","sourcesContent":["import { FullscreenControl } from 'react-map-gl';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst FullscreenControlStyle = styled(FullscreenControl)(({ theme }) => ({\r\n  zIndex: 99,\r\n  borderRadius: 8,\r\n  overflow: 'hidden',\r\n  top: theme.spacing(1.5),\r\n  left: theme.spacing(1.5),\r\n  boxShadow: theme.customShadows.z8,\r\n  '& span.mapboxgl-ctrl-icon': {\r\n    transform: ' scale(0.75)'\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MapControlFullscreen({ ...other }) {\r\n  return <FullscreenControlStyle {...other} />;\r\n}\r\n","import { GeolocateControl } from 'react-map-gl';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst GeolocateControlStyle = styled(GeolocateControl)(({ theme }) => ({\r\n  zIndex: 99,\r\n  borderRadius: 8,\r\n  overflow: 'hidden',\r\n  top: theme.spacing(6),\r\n  left: theme.spacing(1.5),\r\n  boxShadow: theme.customShadows.z8\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MapControlGeolocate({ ...other }) {\r\n  return <GeolocateControlStyle positionOptions={{ enableHighAccuracy: true }} trackUserLocation {...other} />;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Marker } from 'react-map-gl';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\r\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\r\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\r\nconst SIZE = 20;\r\n\r\nconst IconStyle = styled('svg')(({ theme }) => ({\r\n  height: SIZE,\r\n  stroke: 'none',\r\n  cursor: 'pointer',\r\n  fill: theme.palette.error.main,\r\n  transform: `translate(${-SIZE / 2}px,${-SIZE}px)`\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nMapControlMarker.propTypes = {\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default function MapControlMarker({ onClick, ...other }) {\r\n  return (\r\n    <Marker {...other}>\r\n      <IconStyle viewBox=\"0 0 24 24\" onClick={onClick}>\r\n        <path d={ICON} />\r\n      </IconStyle>\r\n    </Marker>\r\n  );\r\n}\r\n","import { NavigationControl } from 'react-map-gl';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst NavigationControlStyle = styled(NavigationControl)(({ theme }) => ({\r\n  zIndex: 99,\r\n  borderRadius: 8,\r\n  overflow: 'hidden',\r\n  bottom: theme.spacing(6),\r\n  left: theme.spacing(1.5),\r\n  boxShadow: theme.customShadows.z8,\r\n  '& button+button': {\r\n    borderTop: `1px solid ${theme.palette.divider}`\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MapControlNavigation({ ...other }) {\r\n  return <NavigationControlStyle {...other} />;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Popup } from 'react-map-gl';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst PopupStyle = styled(Popup)(({ theme }) => {\r\n  const isRTL = theme.direction === 'rtl';\r\n\r\n  return {\r\n    '& .mapboxgl-popup-content': {\r\n      maxWidth: 180,\r\n      padding: theme.spacing(1),\r\n      boxShadow: theme.customShadows.z20,\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: theme.palette.grey[800]\r\n    },\r\n    '& .mapboxgl-popup-close-button': {\r\n      width: 24,\r\n      height: 24,\r\n      fontSize: 16,\r\n      opacity: 0.48,\r\n      color: theme.palette.common.white,\r\n      right: isRTL && '0',\r\n      left: isRTL && 'auto',\r\n      '&:hover': {\r\n        opacity: 1\r\n      },\r\n      '&:focus': {\r\n        outline: 'none'\r\n      }\r\n    },\r\n    '&.mapboxgl-popup-anchor-top .mapboxgl-popup-tip': {\r\n      marginBottom: -1,\r\n      borderBottomColor: theme.palette.grey[800]\r\n    },\r\n    '&.mapboxgl-popup-anchor-right .mapboxgl-popup-tip': {\r\n      marginLeft: -1,\r\n      borderLeftColor: theme.palette.grey[800]\r\n    },\r\n    '&.mapboxgl-popup-anchor-bottom .mapboxgl-popup-tip': {\r\n      marginTop: -1,\r\n      borderTopColor: theme.palette.grey[800]\r\n    },\r\n    '&.mapboxgl-popup-anchor-left .mapboxgl-popup-tip': {\r\n      marginRight: -1,\r\n      borderRightColor: theme.palette.grey[800]\r\n    }\r\n  };\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nMapControlPopup.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func\r\n};\r\n\r\nexport default function MapControlPopup({ children, onClose, ...other }) {\r\n  return (\r\n    <PopupStyle tipSize={8} anchor=\"bottom\" onClose={onClose} closeButton closeOnClick={false} {...other}>\r\n      {children}\r\n    </PopupStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { ScaleControl } from 'react-map-gl';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  zIndex: 99,\r\n  position: 'absolute',\r\n  left: theme.spacing(1.5),\r\n  bottom: theme.spacing(3.5),\r\n  boxShadow: theme.customShadows.z8,\r\n  '& .mapboxgl-ctrl': {\r\n    border: 'none',\r\n    borderRadius: 4,\r\n    lineHeight: '14px',\r\n    color: theme.palette.common.white,\r\n    backgroundImage: `linear-gradient(to right, #8a2387, #e94057, #f27121)`\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nMapControlScale.propTypes = {\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function MapControlScale({ sx, ...other }) {\r\n  return (\r\n    <RootStyle sx={sx}>\r\n      <ScaleControl maxWidth={100} unit=\"imperial\" {...other} />\r\n    </RootStyle>\r\n  );\r\n}\r\n","import { format, formatDistanceToNow } from 'date-fns';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fDate(date) {\r\n  return format(new Date(date), 'dd MMMM yyyy');\r\n}\r\n\r\nexport function fDateTime(date) {\r\n  return format(new Date(date), 'dd MMM yyyy HH:mm');\r\n}\r\n\r\nexport function fDateTimeSuffix(date) {\r\n  return format(new Date(date), 'dd/MM/yyyy hh:mm p');\r\n}\r\n\r\nexport function fToNow(date) {\r\n  return formatDistanceToNow(new Date(date), {\r\n    addSuffix: true\r\n  });\r\n}\r\n","import assign from \"../assign/index.js\";\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","import compareAsc from \"../compareAsc/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import distanceInWords from \"../formatDistance/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsToNow ` to `formatDistanceToNow`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *   ```\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistanceToNow(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return distanceInWords(dirtyDate, Date.now(), dirtyOptions);\n}","import PropTypes from 'prop-types';\r\n// material\r\nimport { alpha, experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, Slider, Switch, Typography } from '@material-ui/core';\r\n// utils\r\nimport { fDate } from '../../../utils/formatTime';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  zIndex: 99,\r\n  minWidth: 240,\r\n  position: 'absolute',\r\n  top: theme.spacing(1),\r\n  right: theme.spacing(1),\r\n  padding: theme.spacing(2),\r\n  backdropFilter: 'blur(8px)',\r\n  WebkitBackdropFilter: 'blur(8px)', // Fix on Mobile\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.grey[900], 0.72)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nControlPanel.propTypes = {\r\n  startTime: PropTypes.number,\r\n  endTime: PropTypes.number,\r\n  allDays: PropTypes.bool,\r\n  selectedTime: PropTypes.number,\r\n  onChangeTime: PropTypes.func,\r\n  onChangeAllDays: PropTypes.func\r\n};\r\n\r\nexport default function ControlPanel({ startTime, endTime, allDays, selectedTime, onChangeTime, onChangeAllDays }) {\r\n  const day = 24 * 60 * 60 * 1000;\r\n  const days = Math.round((endTime - startTime) / day);\r\n  const selectedDay = Math.round((selectedTime - startTime) / day);\r\n\r\n  const handleChangeDays = (event) => {\r\n    const daysToAdd = event.target.value;\r\n    const newTime = startTime + daysToAdd * day;\r\n    onChangeTime(newTime);\r\n  };\r\n\r\n  return (\r\n    <RootStyle>\r\n      <Box\r\n        sx={{\r\n          width: '100%',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between'\r\n        }}\r\n      >\r\n        <Typography variant=\"subtitle2\" sx={{ color: 'common.white' }}>\r\n          All Days\r\n        </Typography>\r\n        <Switch size=\"small\" checked={allDays} onChange={(event) => onChangeAllDays(event.target.checked)} />\r\n      </Box>\r\n      <br />\r\n      <Typography gutterBottom variant=\"body2\" sx={{ color: allDays ? 'text.disabled' : 'common.white' }}>\r\n        Each Day: {fDate(selectedTime)}\r\n      </Typography>\r\n      <Slider min={1} step={1} max={days} disabled={allDays} value={selectedDay} onChange={handleChangeDays} />\r\n    </RootStyle>\r\n  );\r\n}\r\n","import MapGL, { Source, Layer } from 'react-map-gl';\r\nimport { useEffect, useState, useMemo } from 'react';\r\n//\r\nimport { MapControlScale, MapControlGeolocate, MapControlNavigation, MapControlFullscreen } from '../controls';\r\nimport ControlPanel from './ControlPanel';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst HEATMAP_LAYER = {\r\n  maxzoom: 9,\r\n  type: 'heatmap',\r\n  paint: {\r\n    'heatmap-weight': ['interpolate', ['linear'], ['get', 'mag'], 0, 0, 6, 1],\r\n    'heatmap-intensity': ['interpolate', ['linear'], ['zoom'], 0, 1, 9, 3],\r\n    'heatmap-color': [\r\n      'interpolate',\r\n      ['linear'],\r\n      ['heatmap-density'],\r\n      0,\r\n      'rgba(33,102,172,0)',\r\n      0.2,\r\n      'rgb(103,169,207)',\r\n      0.4,\r\n      'rgb(209,229,240)',\r\n      0.6,\r\n      'rgb(253,219,199)',\r\n      0.8,\r\n      'rgb(239,138,98)',\r\n      0.9,\r\n      'rgb(255,201,101)'\r\n    ],\r\n    'heatmap-radius': ['interpolate', ['linear'], ['zoom'], 0, 2, 9, 20],\r\n    'heatmap-opacity': ['interpolate', ['linear'], ['zoom'], 7, 1, 9, 0]\r\n  }\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction filterFeaturesByDay(featureCollection, time) {\r\n  const date = new Date(time);\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth();\r\n  const day = date.getDate();\r\n  const features = featureCollection.features.filter((feature) => {\r\n    const featureDate = new Date(feature.properties.time);\r\n    return featureDate.getFullYear() === year && featureDate.getMonth() === month && featureDate.getDate() === day;\r\n  });\r\n  return { type: 'FeatureCollection', features };\r\n}\r\n\r\nexport default function MapHeatmap({ ...other }) {\r\n  const [allDays, useAllDays] = useState(true);\r\n  const [timeRange, setTimeRange] = useState([0, 0]);\r\n  const [selectedTime, selectTime] = useState(0);\r\n  const [earthquakes, setEarthQuakes] = useState(null);\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 40,\r\n    longitude: -100,\r\n    zoom: 3,\r\n    bearing: 0,\r\n    pitch: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch('https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson')\r\n      .then((resp) => resp.json())\r\n      .then((json) => {\r\n        const { features } = json;\r\n        const endTime = features[0].properties.time;\r\n        const startTime = features[features.length - 1].properties.time;\r\n\r\n        setTimeRange([startTime, endTime]);\r\n        setEarthQuakes(json);\r\n        selectTime(endTime);\r\n      });\r\n  }, []);\r\n\r\n  const data = useMemo(\r\n    () => (allDays ? earthquakes : filterFeaturesByDay(earthquakes, selectedTime)),\r\n    [earthquakes, allDays, selectedTime]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <MapGL {...viewport} onViewportChange={setViewport} {...other}>\r\n        <MapControlScale />\r\n        <MapControlNavigation />\r\n        <MapControlFullscreen />\r\n        <MapControlGeolocate />\r\n\r\n        {data && (\r\n          <Source type=\"geojson\" data={data}>\r\n            <Layer {...HEATMAP_LAYER} />\r\n          </Source>\r\n        )}\r\n      </MapGL>\r\n\r\n      <ControlPanel\r\n        startTime={timeRange[0]}\r\n        endTime={timeRange[1]}\r\n        allDays={allDays}\r\n        selectedTime={selectedTime}\r\n        onChangeTime={selectTime}\r\n        onChangeAllDays={useAllDays}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}