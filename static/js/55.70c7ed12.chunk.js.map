{"version":3,"sources":["components/HeaderBreadcrumbs.js","utils/formatTime.js","components/SearchNotFound.js","components/BadgeStatus.js","components/LightboxModal.js","components/EmojiPicker.js","utils/getFileFormat.js","components/_dashboard/chat/ChatAccount.js","components/_dashboard/chat/ChatContactSearch.js","components/_dashboard/chat/ChatConversationItem.js","components/_dashboard/chat/ChatConversationList.js","components/_dashboard/chat/ChatHeaderCompose.js","components/_dashboard/chat/ChatHeaderDetail.js","components/_dashboard/chat/ChatMessageInput.js","components/_dashboard/chat/ChatMessageItem.js","components/_dashboard/chat/ChatMessageList.js","components/_dashboard/chat/ChatRoomAttachment.js","components/_dashboard/chat/ChatRoomOneParticipant.js","components/_dashboard/chat/ChatRoomPopup.js","components/_dashboard/chat/ChatRoomGroupParticipant.js","components/_dashboard/chat/ChatRoom.js","components/_dashboard/chat/ChatSearchResults.js","components/_dashboard/chat/ChatSidebar.js","components/_dashboard/chat/ChatWindow.js","pages/dashboard/Chat.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","spacing","direction","alignItems","flexGrow","variant","gutterBottom","flexShrink","isString","href","target","map","noWrap","display","fDate","date","format","Date","fDateTime","fDateTimeSuffix","fToNow","formatDistanceToNow","addSuffix","SearchNotFound","searchQuery","align","RootStyle","styled","theme","styleProps","size","status","borderRadius","justifyContent","content","backgroundColor","palette","common","white","height","width","warning","main","transform","error","success","text","disabled","info","BadgeStatus","useStyles","makeStyles","isRTL","backgroundIcon","iconName","backgroundSize","backgroundPosition","backgroundRepeat","alpha","grey","backgroundImage","root","backdropFilter","padding","marginLeft","shape","outline","borderRadiusSm","left","right","LightboxModal","images","photoIndex","setPhotoIndex","isOpen","onClose","classes","useEffect","document","body","style","overflow","toolbarButtons","length","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","reactModalStyle","overlay","zIndex","wrapperClassName","position","PickerStyle","bottom","boxShadow","customShadows","z20","borderRadiusMd","border","background","paper","color","primary","borderColor","divider","typography","body2","opacity","fill","subtitle2","WebkitBackdropFilter","selected","secondary","EmojiPicker","emojiPicker","value","setValue","alignRight","useTheme","useState","emojiPickerState","SetEmojiPicker","title","emoji","onSelect","native","onClickAway","onClick","e","preventDefault","icon","smilingFaceFill","ICON_SIZE","FORMAT_IMG","FORMAT_VIDEO","FORMAT_WORD","FORMAT_EXCEL","FORMAT_POWERPOINT","FORMAT_PDF","FORMAT_PHOTOSHOP","FORMAT_ILLUSTRATOR","getFileType","fileUrl","split","pop","getFileName","substring","lastIndexOf","replace","getFileFullName","getFileThumb","thumb","includes","getFileFormat","src","alt","fileTypeVideo","fileTypeWord","fileTypeExcel","fileTypePowerpoint","fileTypePdf","fileTypePhotoshop2","fileTypeAi2","fileFill","STATUS","ChatAccount","user","useAuth","open","setOpen","setStatus","Box","MyAvatar","event","currentTarget","cursor","Popover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","py","pr","pl","ml","mr","Typography","displayName","email","Tooltip","IconButton","roundPowerSettingsNew","Divider","List","ListItem","disableGutters","px","ListItemIcon","ListItemText","Select","fullWidth","onChange","bgcolor","borderWidth","option","capitalCase","button","roundAccountBox","primaryTypographyProps","settings2Fill","marginTop","SearchStyle","OutlinedInput","transition","transitions","create","easing","easeInOut","duration","shorter","z8","ChatContactSearch","query","onFocus","ClickAwayListener","FormControl","placeholder","startAdornment","InputAdornment","component","Icon","searchFill","AvatarWrapperStyle","ChatConversationItem","isSelected","conversation","onSelectConversation","isOpenSidebar","details","currentUserId","otherParticipants","participants","filter","participant","id","displayNames","reduce","names","name","join","displayText","lastMessage","messages","sender","senderId","message","contentType","getDetails","displayLastActivity","last","createdAt","isGroup","isUnread","unreadCount","isOnlineGroup","item","ListItemAvatar","top","slice","className","Avatar","avatar","secondaryTypographyProps","flexDirection","fontSize","lineHeight","whiteSpace","formatDistanceToNowStrict","ChatConversationList","conversations","activeConversationId","navigate","useNavigate","disablePadding","allIds","conversationId","byId","conversationKey","type","find","username","PATH_DASHBOARD","chat","handleSelectConversation","AutocompleteStyle","minWidth","ChatHeaderCompose","contacts","recipients","onAddRecipient","setQuery","Autocomplete","multiple","disablePortal","popupIcon","clearText","noOptionsText","recipient","onInputChange","options","getOptionLabel","renderOption","props","inputValue","matches","match","parts","parse","checkmarkFill","part","index","highlight","renderTags","getTagProps","label","renderInput","params","TextField","minHeight","OneAvatar","undefined","lastActivity","GroupAvatar","AvatarGroup","max","Link","underline","arrowIosForwardFill","ChatHeaderDetail","phoneFill","videoFill","moreVerticalFill","paddingLeft","ChatMessageInput","onSend","fileInputRef","useRef","setMessage","handleAttach","current","click","handleSend","messageId","faker","datatype","uuid","attachments","Input","disableUnderline","onKeyUp","key","keyCode","endAdornment","Stack","roundAddPhotoAlternate","attach2Fill","micFill","orientation","flexItem","mx","roundSend","ref","marginBottom","ContentStyle","maxWidth","neutral","InfoStyle","MessageImgStyle","objectFit","ChatMessageItem","onOpenLightbox","senderDetails","isMe","isImage","firstName","ChatMessageList","scrollRef","openLightbox","setOpenLightbox","selectedImage","setSelectedImage","scrollTop","scrollHeight","handleOpenLightbox","url","findIndex","Scrollbar","scrollableNodeProps","p","paddingBottom","FileItemStyle","FileThumbStyle","CollapseButtonStyle","Button","overline","AttachmentItem","file","ChatRoomAttachment","isCollapse","onCollapse","totalAttachment","uniq","flatten","endIcon","arrowIosDownwardFill","Collapse","in","RowIconStyle","RowTextStyle","wordWrap","ChatRoomOneParticipant","pt","pb","mt","textAlign","pinFill","address","phone","emailFill","RowStyle","IconStyle","marginRight","ChatRoomPopup","DialogContent","paragraph","Participant","onClosePopup","onShowPopup","ChatRoomGroupParticipant","selectUserId","onShowPopupUserInfo","disableRipple","HEIGHT","borderLeft","ToggleButtonStyle","borderRight","borderTopLeftRadius","borderBottomLeftRadius","ChatRoom","isMobile","useMediaQuery","breakpoints","down","openSidebar","setOpenSidebar","showInfo","setShowInfo","selectUser","setSelectUser","showAttachment","setShowAttachment","showParticipants","setShowParticipants","arrowIosBackFill","participantId","prev","ChatSearchResults","results","onSelectContact","isFound","result","ChatSidebar","setSearchQuery","searchResults","setSearchResults","isSearchFocused","setSearchFocused","displayResults","useSelector","state","handleChangeSearch","a","axios","get","response","data","console","handleSearchSelect","to","new","RouterLink","editFill","ChatWindow","dispatch","useDispatch","pathname","useLocation","useParams","unreadMessages","conversationSelector","mode","displayParticipants","getParticipants","getConversation","resetActiveConversation","markConversationAsRead","handleSendMessage","onSendMessage","Object","values","addRecipients","Chat","getConversations","getContacts","Page","Container","Card"],"mappings":"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","file":"static/js/55.70c7ed12.chunk.js","sourcesContent":["import { isString } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n// material\r\nimport { Box, Typography, Link, Stack } from '@material-ui/core';\r\n//\r\nimport { MBreadcrumbs } from './@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeaderBreadcrumbs.propTypes = {\r\n  links: PropTypes.array,\r\n  action: PropTypes.node,\r\n  heading: PropTypes.string.isRequired,\r\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\r\n  return (\r\n    <Stack sx={sx} mb={5} spacing={2}>\r\n      <Stack direction=\"row\" alignItems=\"center\">\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <MBreadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Stack>\r\n\r\n      {isString(moreLink) ? (\r\n        <Link href={moreLink} target=\"_blank\" variant=\"body2\">\r\n          {moreLink}\r\n        </Link>\r\n      ) : (\r\n        moreLink.map((href) => (\r\n          <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'flex' }}>\r\n            {href}\r\n          </Link>\r\n        ))\r\n      )}\r\n    </Stack>\r\n  );\r\n}\r\n","import { format, formatDistanceToNow } from 'date-fns';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fDate(date) {\r\n  return format(new Date(date), 'dd MMMM yyyy');\r\n}\r\n\r\nexport function fDateTime(date) {\r\n  return format(new Date(date), 'dd MMM yyyy HH:mm');\r\n}\r\n\r\nexport function fDateTimeSuffix(date) {\r\n  return format(new Date(date), 'dd/MM/yyyy hh:mm p');\r\n}\r\n\r\nexport function fToNow(date) {\r\n  return formatDistanceToNow(new Date(date), {\r\n    addSuffix: true\r\n  });\r\n}\r\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { Paper, Typography } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nSearchNotFound.propTypes = {\r\n  searchQuery: PropTypes.string\r\n};\r\n\r\nexport default function SearchNotFound({ searchQuery = '', ...other }) {\r\n  return (\r\n    <Paper {...other}>\r\n      <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\r\n        Not found\r\n      </Typography>\r\n      <Typography variant=\"body2\" align=\"center\">\r\n        No results found for &nbsp;\r\n        <strong>&quot;{searchQuery}&quot;</strong>. Try checking for typos or using complete words.\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('span')(({ theme, styleProps }) => {\r\n  const { size, status } = styleProps;\r\n\r\n  return {\r\n    display: 'flex',\r\n    borderRadius: '50%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    '&:before, &:after': {\r\n      content: \"''\",\r\n      borderRadius: 1,\r\n      backgroundColor: theme.palette.common.white\r\n    },\r\n\r\n    ...(size === 'small'\r\n      ? { height: theme.spacing(1), width: theme.spacing(1) }\r\n      : { height: theme.spacing(1.25), width: theme.spacing(1.25) }),\r\n\r\n    ...(status === 'offline' && {\r\n      backgroundColor: 'transparent'\r\n    }),\r\n\r\n    ...(status === 'away' && {\r\n      backgroundColor: theme.palette.warning.main,\r\n      '&:before': {\r\n        width: 2,\r\n        height: 4,\r\n        transform: 'translateX(1px) translateY(-1px)'\r\n      },\r\n      '&:after': {\r\n        width: 2,\r\n        height: 4,\r\n        transform: 'translateY(1px) rotate(125deg)'\r\n      }\r\n    }),\r\n\r\n    ...(status === 'busy' && {\r\n      backgroundColor: theme.palette.error.main,\r\n      '&:before': { width: 6, height: 2 }\r\n    }),\r\n\r\n    ...(status === 'online' && {\r\n      backgroundColor: theme.palette.success.main\r\n    }),\r\n\r\n    ...(status === 'invisible' && {\r\n      backgroundColor: theme.palette.text.disabled,\r\n      '&:before': {\r\n        width: 6,\r\n        height: 6,\r\n        borderRadius: '50%'\r\n      }\r\n    }),\r\n\r\n    ...(status === 'unread' && {\r\n      backgroundColor: theme.palette.info.main\r\n    })\r\n  };\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BadgeStatus({ size = 'medium', status = 'offline', ...other }) {\r\n  return <RootStyle styleProps={{ status, size }} {...other} />;\r\n}\r\n\r\nBadgeStatus.propTypes = {\r\n  size: PropTypes.oneOf(['small', 'medium']),\r\n  status: PropTypes.oneOf(['away', 'busy', 'unread', 'online', 'offline', 'invisible'])\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport Lightbox from 'react-image-lightbox';\r\n// material\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  const isRTL = theme.direction === 'rtl';\r\n\r\n  const backgroundIcon = (iconName) => ({\r\n    backgroundSize: '24px 24px',\r\n    backgroundPosition: 'center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor: alpha(theme.palette.grey[900], 0.8),\r\n    backgroundImage: `url(\"/static/icons/controls/${iconName}.svg\")`\r\n  });\r\n\r\n  return {\r\n    root: {\r\n      backdropFilter: 'blur(8px)',\r\n      backgroundColor: alpha(theme.palette.grey[900], 0.88),\r\n\r\n      // Toolbar\r\n      '& .ril__toolbar': {\r\n        height: 'auto !important',\r\n        padding: theme.spacing(2, 3),\r\n        backgroundColor: 'transparent'\r\n      },\r\n      '& .ril__toolbarLeftSide': { display: 'none' },\r\n      '& .ril__toolbarRightSide': {\r\n        height: 'auto !important',\r\n        padding: 0,\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '& li': {\r\n          display: 'flex',\r\n          alignItems: 'center'\r\n        },\r\n        '& li:first-child': {\r\n          flexGrow: 1\r\n        },\r\n        '& li:not(:first-child)': {\r\n          width: theme.spacing(5),\r\n          height: theme.spacing(5),\r\n          justifyContent: 'center',\r\n          marginLeft: theme.spacing(1),\r\n          borderRadius: theme.shape.borderRadius\r\n        }\r\n      },\r\n\r\n      // Button\r\n      '& button:focus': { outline: 'none' },\r\n      '& .ril__toolbarRightSide button': {\r\n        width: '100%',\r\n        height: '100%',\r\n        '&.ril__zoomInButton': backgroundIcon('maximize-outline'),\r\n        '&.ril__zoomOutButton': backgroundIcon('minimize-outline'),\r\n        '&.ril__closeButton': backgroundIcon('close')\r\n      },\r\n      '& .ril__navButtons': {\r\n        padding: theme.spacing(3),\r\n        borderRadius: theme.shape.borderRadiusSm,\r\n        '&.ril__navButtonPrev': {\r\n          left: theme.spacing(2),\r\n          right: 'auto',\r\n          ...backgroundIcon(isRTL ? 'arrow-ios-forward' : 'arrow-ios-back')\r\n        },\r\n        '&.ril__navButtonNext': {\r\n          right: theme.spacing(2),\r\n          left: 'auto',\r\n          ...backgroundIcon(isRTL ? 'arrow-ios-back' : 'arrow-ios-forward')\r\n        }\r\n      }\r\n    }\r\n  };\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nLightboxModal.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  photoIndex: PropTypes.number,\r\n  setPhotoIndex: PropTypes.func,\r\n  isOpen: PropTypes.bool,\r\n  onClose: PropTypes.func\r\n};\r\n\r\nexport default function LightboxModal({ images, photoIndex, setPhotoIndex, isOpen, onClose, ...other }) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      document.body.style.overflow = 'hidden';\r\n    } else {\r\n      document.body.style.overflow = 'unset';\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const showIndex = <Typography variant=\"subtitle2\">{`${photoIndex + 1} / ${images.length}`}</Typography>;\r\n\r\n  const toolbarButtons = [showIndex];\r\n  const customStyles = {\r\n    overlay: {\r\n      zIndex: 9999\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <Lightbox\r\n          mainSrc={images[photoIndex]}\r\n          nextSrc={images[(photoIndex + 1) % images.length]}\r\n          prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n          onCloseRequest={onClose}\r\n          onMovePrevRequest={() => setPhotoIndex((photoIndex + images.length - 1) % images.length)}\r\n          onMoveNextRequest={() => setPhotoIndex((photoIndex + 1) % images.length)}\r\n          toolbarButtons={toolbarButtons}\r\n          reactModalStyle={customStyles}\r\n          wrapperClassName={classes.root}\r\n          {...other}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import 'emoji-mart/css/emoji-mart.css';\r\nimport PropTypes from 'prop-types';\r\nimport { Picker } from 'emoji-mart';\r\nimport { Icon } from '@iconify/react';\r\nimport { useState } from 'react';\r\nimport smilingFaceFill from '@iconify/icons-eva/smiling-face-fill';\r\n// material\r\nimport { alpha, useTheme, experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { IconButton, ClickAwayListener } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')({\r\n  position: 'relative'\r\n});\r\n\r\nconst PickerStyle = styled('div')(({ theme }) => ({\r\n  bottom: 40,\r\n  overflow: 'hidden',\r\n  position: 'absolute',\r\n  left: theme.spacing(-2),\r\n  boxShadow: theme.customShadows.z20,\r\n  borderRadius: theme.shape.borderRadiusMd,\r\n  '& .emoji-mart': {\r\n    border: 'none',\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  '& .emoji-mart-anchor': {\r\n    color: theme.palette.text.disabled,\r\n    '&:hover, &:focus, &.emoji-mart-anchor-selected': {\r\n      color: theme.palette.text.primary\r\n    }\r\n  },\r\n  '& .emoji-mart-bar': { borderColor: theme.palette.divider },\r\n  '& .emoji-mart-search input': {\r\n    backgroundColor: 'transparent',\r\n    color: theme.palette.text.primary,\r\n    borderColor: theme.palette.grey[500_32],\r\n    '&::placeholder': {\r\n      ...theme.typography.body2,\r\n      color: theme.palette.text.disabled\r\n    }\r\n  },\r\n  '& .emoji-mart-search-icon svg': {\r\n    opacity: 1,\r\n    fill: theme.palette.text.disabled\r\n  },\r\n  '& .emoji-mart-category-label span': {\r\n    ...theme.typography.subtitle2,\r\n    backdropFilter: 'blur(8px)',\r\n    WebkitBackdropFilter: 'blur(8px)', // Fix on Mobile\r\n    color: theme.palette.text.primary,\r\n    backgroundColor: alpha(theme.palette.background.paper, 0.8)\r\n  },\r\n  '& .emoji-mart-title-label': { color: theme.palette.text.primary },\r\n  '& .emoji-mart-category .emoji-mart-emoji:hover:before': {\r\n    backgroundColor: theme.palette.action.selected\r\n  },\r\n  '& .emoji-mart-emoji': { outline: 'none' },\r\n  '& .emoji-mart-preview-name': {\r\n    color: theme.palette.text.primary\r\n  },\r\n  '& .emoji-mart-preview-shortname, .emoji-mart-preview-emoticon': {\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nEmojiPicker.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  value: PropTypes.string,\r\n  setValue: PropTypes.func,\r\n  alignRight: PropTypes.bool\r\n};\r\n\r\nexport default function EmojiPicker({ disabled, value, setValue, alignRight = false, ...other }) {\r\n  const theme = useTheme();\r\n  const [emojiPickerState, SetEmojiPicker] = useState(false);\r\n\r\n  let emojiPicker;\r\n  if (emojiPickerState) {\r\n    emojiPicker = (\r\n      <Picker\r\n        color={theme.palette.primary.main}\r\n        title=\"Pick your emoji…\"\r\n        emoji=\"point_up\"\r\n        onSelect={(emoji) => setValue(value + emoji.native)}\r\n      />\r\n    );\r\n  }\r\n\r\n  const triggerPicker = (e) => {\r\n    e.preventDefault();\r\n    SetEmojiPicker(!emojiPickerState);\r\n  };\r\n\r\n  const handleClickAway = () => {\r\n    SetEmojiPicker(false);\r\n  };\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={handleClickAway}>\r\n      <RootStyle {...other}>\r\n        <PickerStyle\r\n          sx={{\r\n            ...(alignRight && {\r\n              right: -2,\r\n              left: 'auto !important'\r\n            })\r\n          }}\r\n        >\r\n          {emojiPicker}\r\n        </PickerStyle>\r\n        <IconButton disabled={disabled} size=\"small\" onClick={triggerPicker}>\r\n          <Icon icon={smilingFaceFill} width={20} height={20} />\r\n        </IconButton>\r\n      </RootStyle>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n","import { Icon } from '@iconify/react';\r\nimport fileFill from '@iconify/icons-eva/file-fill';\r\nimport fileTypePdf from '@iconify/icons-vscode-icons/file-type-pdf';\r\nimport fileTypeAi2 from '@iconify/icons-vscode-icons/file-type-ai2';\r\nimport fileTypeWord from '@iconify/icons-vscode-icons/file-type-word';\r\nimport fileTypeExcel from '@iconify/icons-vscode-icons/file-type-excel';\r\nimport fileTypeVideo from '@iconify/icons-vscode-icons/file-type-video';\r\nimport fileTypePowerpoint from '@iconify/icons-vscode-icons/file-type-powerpoint';\r\nimport fileTypePhotoshop2 from '@iconify/icons-vscode-icons/file-type-photoshop2';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ICON_SIZE = { width: 28, height: 28 };\r\n\r\nconst FORMAT_IMG = ['jpg', 'jpeg', 'gif', 'bmp', 'png'];\r\nconst FORMAT_VIDEO = ['m4v', 'avi', 'mpg', 'mp4', 'webm'];\r\nconst FORMAT_WORD = ['doc', 'docx'];\r\nconst FORMAT_EXCEL = ['xls', 'xlsx'];\r\nconst FORMAT_POWERPOINT = ['ppt', 'pptx'];\r\nconst FORMAT_PDF = ['pdf'];\r\nconst FORMAT_PHOTOSHOP = ['psd'];\r\nconst FORMAT_ILLUSTRATOR = ['ai', 'esp'];\r\n\r\nexport function getFileType(fileUrl) {\r\n  return fileUrl.split('.').pop();\r\n}\r\n\r\nexport function getFileName(fileUrl) {\r\n  return fileUrl.substring(fileUrl.lastIndexOf('/') + 1).replace(/\\.[^/.]+$/, '');\r\n}\r\n\r\nexport function getFileFullName(fileUrl) {\r\n  return fileUrl.split('/').pop();\r\n}\r\n\r\nexport function getFileFormat(fileUrl) {\r\n  let format;\r\n\r\n  switch (fileUrl.includes(getFileType(fileUrl))) {\r\n    case FORMAT_IMG.includes(getFileType(fileUrl)):\r\n      format = 'image';\r\n      break;\r\n    case FORMAT_VIDEO.includes(getFileType(fileUrl)):\r\n      format = 'video';\r\n      break;\r\n    case FORMAT_WORD.includes(getFileType(fileUrl)):\r\n      format = 'word';\r\n      break;\r\n    case FORMAT_EXCEL.includes(getFileType(fileUrl)):\r\n      format = 'excel';\r\n      break;\r\n    case FORMAT_POWERPOINT.includes(getFileType(fileUrl)):\r\n      format = 'powerpoint';\r\n      break;\r\n    case FORMAT_PDF.includes(getFileType(fileUrl)):\r\n      format = 'pdf';\r\n      break;\r\n    case FORMAT_PHOTOSHOP.includes(getFileType(fileUrl)):\r\n      format = 'photoshop';\r\n      break;\r\n    case FORMAT_ILLUSTRATOR.includes(getFileType(fileUrl)):\r\n      format = 'illustrator';\r\n      break;\r\n    default:\r\n      format = getFileType(fileUrl);\r\n  }\r\n\r\n  return format;\r\n}\r\n\r\nexport function getFileThumb(fileUrl) {\r\n  let thumb;\r\n  switch (getFileFormat(fileUrl)) {\r\n    case 'image':\r\n      thumb = <img src={fileUrl} alt={fileUrl} />;\r\n      break;\r\n    case 'video':\r\n      thumb = <Icon icon={fileTypeVideo} {...ICON_SIZE} />;\r\n      break;\r\n    case 'word':\r\n      thumb = <Icon icon={fileTypeWord} {...ICON_SIZE} />;\r\n      break;\r\n    case 'excel':\r\n      thumb = <Icon icon={fileTypeExcel} {...ICON_SIZE} />;\r\n      break;\r\n    case 'powerpoint':\r\n      thumb = <Icon icon={fileTypePowerpoint} {...ICON_SIZE} />;\r\n      break;\r\n    case 'pdf':\r\n      thumb = <Icon icon={fileTypePdf} {...ICON_SIZE} />;\r\n      break;\r\n    case 'photoshop':\r\n      thumb = <Icon icon={fileTypePhotoshop2} {...ICON_SIZE} />;\r\n      break;\r\n    case 'illustrator':\r\n      thumb = <Icon icon={fileTypeAi2} {...ICON_SIZE} />;\r\n      break;\r\n    default:\r\n      thumb = <Icon icon={fileFill} {...ICON_SIZE} />;\r\n  }\r\n  return thumb;\r\n}\r\n","import { Icon } from '@iconify/react';\r\nimport { useState } from 'react';\r\nimport { capitalCase } from 'change-case';\r\nimport settings2Fill from '@iconify/icons-eva/settings-2-fill';\r\nimport roundAccountBox from '@iconify/icons-ic/round-account-box';\r\nimport roundPowerSettingsNew from '@iconify/icons-ic/round-power-settings-new';\r\n// material\r\nimport {\r\n  Box,\r\n  List,\r\n  Select,\r\n  Divider,\r\n  Popover,\r\n  Tooltip,\r\n  ListItem,\r\n  Typography,\r\n  IconButton,\r\n  ListItemIcon,\r\n  ListItemText\r\n} from '@material-ui/core';\r\n// hooks\r\nimport useAuth from '../../../hooks/useAuth';\r\n//\r\nimport MyAvatar from '../../MyAvatar';\r\nimport BadgeStatus from '../../BadgeStatus';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst STATUS = ['online', 'invisible', 'away'];\r\n\r\nexport default function ChatAccount() {\r\n  const { user } = useAuth();\r\n  const [open, setOpen] = useState(null);\r\n  const [status, setStatus] = useState('online');\r\n\r\n  const handleOpen = (event) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleChangeStatus = (event) => {\r\n    setStatus(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ position: 'relative' }}>\r\n        <MyAvatar onClick={handleOpen} sx={{ cursor: 'pointer', width: 48, height: 48 }} />\r\n        <BadgeStatus status={status} sx={{ position: 'absolute', bottom: 2, right: 2 }} />\r\n      </Box>\r\n\r\n      <Popover\r\n        open={Boolean(open)}\r\n        anchorEl={open}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            py: 2,\r\n            pr: 1,\r\n            pl: 2.5,\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n          }}\r\n        >\r\n          <MyAvatar />\r\n\r\n          <Box sx={{ ml: 2, mr: 3 }}>\r\n            <Typography noWrap variant=\"subtitle1\">\r\n              {user.displayName}\r\n            </Typography>\r\n            <Typography noWrap variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n              {user.email}\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Tooltip title=\"Log out\">\r\n            <IconButton>\r\n              <Icon icon={roundPowerSettingsNew} width={24} height={24} />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n\r\n        <Divider />\r\n\r\n        <List>\r\n          <ListItem disableGutters sx={{ py: 1, px: 2.5 }}>\r\n            <ListItemIcon>\r\n              <Box\r\n                sx={{\r\n                  width: 24,\r\n                  height: 24,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center'\r\n                }}\r\n              >\r\n                <BadgeStatus status={status} />\r\n              </Box>\r\n            </ListItemIcon>\r\n            <ListItemText>\r\n              <Select\r\n                native\r\n                fullWidth\r\n                size=\"small\"\r\n                value={status}\r\n                onChange={handleChangeStatus}\r\n                sx={{\r\n                  '& svg': { display: `none` },\r\n                  '& select': {\r\n                    padding: 0,\r\n                    typography: 'body2',\r\n                    '&:focus': { bgcolor: 'transparent' }\r\n                  },\r\n                  '& fieldset': { borderWidth: `0 !important` }\r\n                }}\r\n              >\r\n                {STATUS.map((option) => (\r\n                  <option key={option} value={option}>\r\n                    {capitalCase(option)}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </ListItemText>\r\n          </ListItem>\r\n\r\n          <ListItem button disableGutters sx={{ py: 1, px: 2.5 }}>\r\n            <ListItemIcon>\r\n              <Icon icon={roundAccountBox} width={24} height={24} />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary=\"Profile\"\r\n              primaryTypographyProps={{\r\n                variant: 'body2'\r\n              }}\r\n            />\r\n          </ListItem>\r\n\r\n          <ListItem button disableGutters sx={{ py: 1, px: 2.5 }}>\r\n            <ListItemIcon>\r\n              <Icon icon={settings2Fill} width={24} height={24} />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary=\"Settings\"\r\n              primaryTypographyProps={{\r\n                variant: 'body2'\r\n              }}\r\n            />\r\n          </ListItem>\r\n        </List>\r\n      </Popover>\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport searchFill from '@iconify/icons-eva/search-fill';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, FormControl, OutlinedInput, InputAdornment, ClickAwayListener } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  marginTop: theme.spacing(2)\r\n}));\r\n\r\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\r\n  transition: theme.transitions.create('box-shadow', {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.shorter\r\n  }),\r\n  '&.Mui-focused': { boxShadow: theme.customShadows.z8 },\r\n  '& fieldset': {\r\n    borderWidth: `1px !important`,\r\n    borderColor: `${theme.palette.grey[500_32]} !important`\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatContactSearch.propTypes = {\r\n  query: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  onFocus: PropTypes.func,\r\n  onClickAway: PropTypes.func\r\n};\r\n\r\nexport default function ChatContactSearch({ query, onChange, onFocus, onClickAway, ...other }) {\r\n  return (\r\n    <ClickAwayListener onClickAway={onClickAway}>\r\n      <RootStyle {...other}>\r\n        <FormControl fullWidth size=\"small\">\r\n          <SearchStyle\r\n            value={query}\r\n            onFocus={onFocus}\r\n            onChange={onChange}\r\n            placeholder=\"Search contacts...\"\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <Box component={Icon} icon={searchFill} sx={{ color: 'text.disabled' }} />\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n      </RootStyle>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n","import { last } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport { formatDistanceToNowStrict } from 'date-fns';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, Avatar, ListItem, ListItemText, ListItemAvatar } from '@material-ui/core';\r\n//\r\nimport BadgeStatus from '../../BadgeStatus';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst AVATAR_SIZE = 48;\r\nconst AVATAR_SIZE_GROUP = 32;\r\n\r\nconst RootStyle = styled(ListItem)(({ theme }) => ({\r\n  padding: theme.spacing(1.5, 3),\r\n  transition: theme.transitions.create('all')\r\n}));\r\n\r\nconst AvatarWrapperStyle = styled('div')({\r\n  position: 'relative',\r\n  width: AVATAR_SIZE,\r\n  height: AVATAR_SIZE,\r\n  '& .MuiAvatar-img': { borderRadius: '50%' },\r\n  '& .MuiAvatar-root': { width: '100%', height: '100%' }\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst getDetails = (conversation, currentUserId) => {\r\n  const otherParticipants = conversation.participants.filter((participant) => participant.id !== currentUserId);\r\n  const displayNames = otherParticipants.reduce((names, participant) => [...names, participant.name], []).join(', ');\r\n  let displayText = '';\r\n  const lastMessage = conversation.messages[conversation.messages.length - 1];\r\n  if (lastMessage) {\r\n    const sender = lastMessage.senderId === currentUserId ? 'You: ' : '';\r\n    const message = lastMessage.contentType === 'image' ? 'Sent a photo' : lastMessage.body;\r\n    displayText = `${sender}${message}`;\r\n  }\r\n  return { otherParticipants, displayNames, displayText };\r\n};\r\n\r\nChatConversationItem.propTypes = {\r\n  isSelected: PropTypes.bool,\r\n  conversation: PropTypes.object.isRequired,\r\n  isOpenSidebar: PropTypes.bool,\r\n  onSelectConversation: PropTypes.func\r\n};\r\n\r\nexport default function ChatConversationItem({\r\n  isSelected,\r\n  conversation,\r\n  onSelectConversation,\r\n  isOpenSidebar,\r\n  ...other\r\n}) {\r\n  const details = getDetails(conversation, '8864c717-587d-472a-929a-8e5f298024da-0');\r\n\r\n  const displayLastActivity = last(conversation.messages).createdAt;\r\n  const isGroup = details.otherParticipants.length > 1;\r\n  const isUnread = conversation.unreadCount > 0;\r\n  const isOnlineGroup = isGroup && details.otherParticipants.map((item) => item.status).includes('online');\r\n\r\n  return (\r\n    <RootStyle\r\n      button\r\n      disableGutters\r\n      onClick={onSelectConversation}\r\n      sx={{\r\n        ...(isSelected && { bgcolor: 'action.selected' })\r\n      }}\r\n      {...other}\r\n    >\r\n      <ListItemAvatar>\r\n        <Box\r\n          sx={{\r\n            ...(isGroup && {\r\n              position: 'relative',\r\n              width: AVATAR_SIZE,\r\n              height: AVATAR_SIZE,\r\n              '& .avatarWrapper': {\r\n                position: 'absolute',\r\n                width: AVATAR_SIZE_GROUP,\r\n                height: AVATAR_SIZE_GROUP,\r\n                '&:nth-child(1)': {\r\n                  left: 0,\r\n                  zIndex: 9,\r\n                  bottom: 2,\r\n                  '& .MuiAvatar-root': {\r\n                    border: (theme) => `solid 2px ${theme.palette.background.paper}`\r\n                  }\r\n                },\r\n                '&:nth-child(2)': { top: 2, right: 0 }\r\n              }\r\n            })\r\n          }}\r\n        >\r\n          {details.otherParticipants.slice(0, 2).map((participant) => (\r\n            <AvatarWrapperStyle className=\"avatarWrapper\" key={participant.id}>\r\n              <Avatar alt={participant.name} src={participant.avatar} />\r\n              {!isGroup && (\r\n                <BadgeStatus status={participant.status} sx={{ right: 2, bottom: 2, position: 'absolute' }} />\r\n              )}\r\n            </AvatarWrapperStyle>\r\n          ))}\r\n          {isOnlineGroup && <BadgeStatus status=\"online\" sx={{ right: 2, bottom: 2, position: 'absolute' }} />}\r\n        </Box>\r\n      </ListItemAvatar>\r\n\r\n      {isOpenSidebar && (\r\n        <>\r\n          <ListItemText\r\n            primary={details.displayNames}\r\n            primaryTypographyProps={{\r\n              noWrap: true,\r\n              variant: 'subtitle2'\r\n            }}\r\n            secondary={details.displayText}\r\n            secondaryTypographyProps={{\r\n              noWrap: true,\r\n              variant: isUnread ? 'subtitle2' : 'body2',\r\n              color: isUnread ? 'textPrimary' : 'textSecondary'\r\n            }}\r\n          />\r\n\r\n          <Box\r\n            sx={{\r\n              ml: 2,\r\n              height: 44,\r\n              display: 'flex',\r\n              alignItems: 'flex-end',\r\n              flexDirection: 'column'\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                mb: 1.25,\r\n                fontSize: 12,\r\n                lineHeight: '22px',\r\n                whiteSpace: 'nowrap',\r\n                color: 'text.disabled'\r\n              }}\r\n            >\r\n              {formatDistanceToNowStrict(new Date(displayLastActivity), {\r\n                addSuffix: false\r\n              })}\r\n            </Box>\r\n            {isUnread && <BadgeStatus status=\"unread\" size=\"small\" />}\r\n          </Box>\r\n        </>\r\n      )}\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useNavigate } from 'react-router-dom';\r\n// material\r\nimport { List } from '@material-ui/core';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n//\r\nimport ChatConversationItem from './ChatConversationItem';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatConversationList.propTypes = {\r\n  conversations: PropTypes.object,\r\n  isOpenSidebar: PropTypes.bool,\r\n  activeConversationId: PropTypes.string\r\n};\r\n\r\nexport default function ChatConversationList({ conversations, isOpenSidebar, activeConversationId, ...other }) {\r\n  const navigate = useNavigate();\r\n\r\n  const handleSelectConversation = (conversationId) => {\r\n    let conversationKey = '';\r\n    const conversation = conversations.byId[conversationId];\r\n    if (conversation.type === 'GROUP') {\r\n      conversationKey = conversation.id;\r\n    } else {\r\n      const otherParticipant = conversation.participants.find(\r\n        (participant) => participant.id !== '8864c717-587d-472a-929a-8e5f298024da-0'\r\n      );\r\n      conversationKey = otherParticipant.username;\r\n    }\r\n    navigate(`${PATH_DASHBOARD.chat.root}/${conversationKey}`);\r\n  };\r\n\r\n  return (\r\n    <List disablePadding {...other}>\r\n      {conversations.allIds.map((conversationId) => (\r\n        <ChatConversationItem\r\n          key={conversationId}\r\n          isOpenSidebar={isOpenSidebar}\r\n          conversation={conversations.byId[conversationId]}\r\n          isSelected={activeConversationId === conversationId}\r\n          onSelectConversation={() => handleSelectConversation(conversationId)}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { useState } from 'react';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport match from 'autosuggest-highlight/match';\r\nimport checkmarkFill from '@iconify/icons-eva/checkmark-fill';\r\n// material\r\nimport { alpha, experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, Avatar, TextField, Typography, Autocomplete } from '@material-ui/core';\r\n//\r\nimport { MChip } from '../../@material-extend';\r\nimport SearchNotFound from '../../SearchNotFound';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(2, 3)\r\n}));\r\n\r\nconst AutocompleteStyle = styled('div')(({ theme }) => ({\r\n  '& .MuiAutocomplete-root': {\r\n    minWidth: 280,\r\n    marginLeft: theme.spacing(2),\r\n    '&.Mui-focused .MuiAutocomplete-inputRoot': {\r\n      boxShadow: theme.customShadows.z8\r\n    }\r\n  },\r\n  '& .MuiAutocomplete-inputRoot': {\r\n    transition: theme.transitions.create('box-shadow', {\r\n      easing: theme.transitions.easing.easeInOut,\r\n      duration: theme.transitions.duration.shorter\r\n    }),\r\n    '& fieldset': {\r\n      borderWidth: `1px !important`,\r\n      borderColor: `${theme.palette.grey[500_32]} !important`\r\n    }\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatHeaderCompose.propTypes = {\r\n  contacts: PropTypes.array,\r\n  recipients: PropTypes.array,\r\n  onAddRecipient: PropTypes.func\r\n};\r\n\r\nexport default function ChatHeaderCompose({ contacts, recipients, onAddRecipient, ...other }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleChangeQuery = (event) => {\r\n    setQuery(event.target.value);\r\n  };\r\n\r\n  const handleAddRecipient = (e, recipient) => {\r\n    setQuery('');\r\n    if (onAddRecipient) {\r\n      onAddRecipient(recipient);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\r\n        To:\r\n      </Typography>\r\n\r\n      <AutocompleteStyle>\r\n        <Autocomplete\r\n          multiple\r\n          size=\"small\"\r\n          disablePortal\r\n          popupIcon={null}\r\n          clearText={null}\r\n          noOptionsText={<SearchNotFound searchQuery={query} />}\r\n          onChange={handleAddRecipient}\r\n          onInputChange={handleChangeQuery}\r\n          options={contacts}\r\n          getOptionLabel={(recipient) => recipient.name}\r\n          renderOption={(props, recipient, { inputValue, selected }) => {\r\n            const { name, avatar } = recipient;\r\n            const matches = match(name, inputValue);\r\n            const parts = parse(name, matches);\r\n            return (\r\n              <li {...props}>\r\n                <Box\r\n                  sx={{\r\n                    width: 32,\r\n                    height: 32,\r\n                    overflow: 'hidden',\r\n                    borderRadius: '50%',\r\n                    position: 'relative'\r\n                  }}\r\n                >\r\n                  <Avatar alt={name} src={avatar} />\r\n                  <Box\r\n                    sx={{\r\n                      top: 0,\r\n                      opacity: 0,\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      display: 'flex',\r\n                      position: 'absolute',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      bgcolor: (theme) => alpha(theme.palette.grey[900], 0.8),\r\n                      transition: (theme) =>\r\n                        theme.transitions.create('opacity', {\r\n                          easing: theme.transitions.easing.easeInOut,\r\n                          duration: theme.transitions.duration.shorter\r\n                        }),\r\n                      ...(selected && {\r\n                        opacity: 1,\r\n                        color: 'primary.main'\r\n                      })\r\n                    }}\r\n                  >\r\n                    <Icon icon={checkmarkFill} width={20} height={20} />\r\n                  </Box>\r\n                </Box>\r\n                <Box sx={{ ml: 2 }} />\r\n                {parts.map((part, index) => (\r\n                  <Typography key={index} variant=\"subtitle2\" color={part.highlight ? 'primary' : 'textPrimary'}>\r\n                    {part.text}\r\n                  </Typography>\r\n                ))}\r\n              </li>\r\n            );\r\n          }}\r\n          renderTags={(recipients, getTagProps) =>\r\n            recipients.map((recipient, index) => {\r\n              const { id, name, avatar } = recipient;\r\n              return (\r\n                <MChip\r\n                  key={id}\r\n                  size=\"small\"\r\n                  label={name}\r\n                  color=\"info\"\r\n                  avatar={<Avatar alt={name} src={avatar} />}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              );\r\n            })\r\n          }\r\n          renderInput={(params) => <TextField {...params} placeholder={recipients.length === 0 ? 'Recipients' : ''} />}\r\n        />\r\n      </AutocompleteStyle>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { capitalCase } from 'change-case';\r\nimport videoFill from '@iconify/icons-eva/video-fill';\r\nimport phoneFill from '@iconify/icons-eva/phone-fill';\r\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, Link, Avatar, Typography, AvatarGroup } from '@material-ui/core';\r\n// utils\r\nimport { fToNow } from '../../../utils/formatTime';\r\n//\r\nimport { MIconButton } from '../../@material-extend';\r\nimport BadgeStatus from '../../BadgeStatus';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  flexShrink: 0,\r\n  minHeight: 92,\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(0, 3)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nOneAvatar.propTypes = {\r\n  participants: PropTypes.array\r\n};\r\n\r\nfunction OneAvatar({ participants }) {\r\n  const participant = [...participants][0];\r\n\r\n  if (participant === undefined) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n      <Box sx={{ position: 'relative' }}>\r\n        <Avatar src={participant.avatar} alt={participant.name} />\r\n        <BadgeStatus status={participant.status} sx={{ position: 'absolute', right: 2, bottom: 2 }} />\r\n      </Box>\r\n      <Box sx={{ ml: 2 }}>\r\n        <Typography variant=\"subtitle2\">{participant.name}</Typography>\r\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n          {participant.status !== 'offline' ? capitalCase(participant.status) : fToNow(participant.lastActivity)}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nGroupAvatar.propTypes = {\r\n  participants: PropTypes.array\r\n};\r\n\r\nfunction GroupAvatar({ participants }) {\r\n  return (\r\n    <div>\r\n      <AvatarGroup\r\n        max={3}\r\n        sx={{\r\n          mb: 0.5,\r\n          '& .MuiAvatar-root': { width: 32, height: 32 }\r\n        }}\r\n      >\r\n        {participants.map((participant) => (\r\n          <Avatar key={participant.id} alt={participant.name} src={participant.avatar} />\r\n        ))}\r\n      </AvatarGroup>\r\n      <Link variant=\"body2\" underline=\"none\" component=\"button\" color=\"text.secondary\" onClick={() => {}}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          {participants.length} persons\r\n          <Icon icon={arrowIosForwardFill} />\r\n        </Box>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nChatHeaderDetail.propTypes = {\r\n  participants: PropTypes.array\r\n};\r\n\r\nexport default function ChatHeaderDetail({ participants, ...other }) {\r\n  const isGroup = participants.length > 1;\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      {isGroup ? <GroupAvatar participants={participants} /> : <OneAvatar participants={participants} />}\r\n\r\n      <Box sx={{ flexGrow: 1 }} />\r\n      <MIconButton>\r\n        <Icon icon={phoneFill} width={20} height={20} />\r\n      </MIconButton>\r\n      <MIconButton>\r\n        <Icon icon={videoFill} width={20} height={20} />\r\n      </MIconButton>\r\n      <MIconButton>\r\n        <Icon icon={moreVerticalFill} width={20} height={20} />\r\n      </MIconButton>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import faker from 'faker';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { useRef, useState } from 'react';\r\nimport micFill from '@iconify/icons-eva/mic-fill';\r\nimport roundSend from '@iconify/icons-ic/round-send';\r\nimport attach2Fill from '@iconify/icons-eva/attach-2-fill';\r\nimport roundAddPhotoAlternate from '@iconify/icons-ic/round-add-photo-alternate';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Input, Divider, IconButton, InputAdornment, Stack } from '@material-ui/core';\r\n//\r\nimport EmojiPicker from '../../EmojiPicker';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  minHeight: 56,\r\n  display: 'flex',\r\n  position: 'relative',\r\n  alignItems: 'center',\r\n  paddingLeft: theme.spacing(2)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatMessageInput.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  conversationId: PropTypes.string,\r\n  onSend: PropTypes.func\r\n};\r\n\r\nexport default function ChatMessageInput({ disabled, conversationId, onSend, ...other }) {\r\n  const fileInputRef = useRef(null);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleAttach = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleChangeMessage = (event) => {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  const handleKeyUp = (event) => {\r\n    if (event.key === 'Enter' || event.keyCode === 13) {\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  const handleSend = () => {\r\n    if (!message) {\r\n      return '';\r\n    }\r\n    if (onSend) {\r\n      onSend({\r\n        conversationId,\r\n        messageId: faker.datatype.uuid(),\r\n        message,\r\n        contentType: 'text',\r\n        attachments: [],\r\n        createdAt: new Date(),\r\n        senderId: '8864c717-587d-472a-929a-8e5f298024da-0'\r\n      });\r\n    }\r\n    return setMessage('');\r\n  };\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      <Input\r\n        disabled={disabled}\r\n        fullWidth\r\n        value={message}\r\n        disableUnderline\r\n        onKeyUp={handleKeyUp}\r\n        onChange={handleChangeMessage}\r\n        placeholder=\"Type a message\"\r\n        startAdornment={\r\n          <InputAdornment position=\"start\">\r\n            <EmojiPicker disabled={disabled} value={message} setValue={setMessage} />\r\n          </InputAdornment>\r\n        }\r\n        endAdornment={\r\n          <Stack direction=\"row\" spacing={0.5} mr={1.5}>\r\n            <IconButton disabled={disabled} size=\"small\" onClick={handleAttach}>\r\n              <Icon icon={roundAddPhotoAlternate} width={24} height={24} />\r\n            </IconButton>\r\n            <IconButton disabled={disabled} size=\"small\" onClick={handleAttach}>\r\n              <Icon icon={attach2Fill} width={24} height={24} />\r\n            </IconButton>\r\n            <IconButton disabled={disabled} size=\"small\">\r\n              <Icon icon={micFill} width={24} height={24} />\r\n            </IconButton>\r\n          </Stack>\r\n        }\r\n        sx={{ height: '100%' }}\r\n      />\r\n\r\n      <Divider orientation=\"vertical\" flexItem />\r\n\r\n      <IconButton color=\"primary\" disabled={!message} onClick={handleSend} sx={{ mx: 1 }}>\r\n        <Icon icon={roundSend} width={24} height={24} />\r\n      </IconButton>\r\n\r\n      <input type=\"file\" ref={fileInputRef} style={{ display: 'none' }} />\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { formatDistanceToNowStrict } from 'date-fns';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Avatar, Box, Typography } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  marginBottom: theme.spacing(3)\r\n}));\r\n\r\nconst ContentStyle = styled('div')(({ theme }) => ({\r\n  maxWidth: 320,\r\n  padding: theme.spacing(1.5),\r\n  marginTop: theme.spacing(0.5),\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: theme.palette.background.neutral\r\n}));\r\n\r\nconst InfoStyle = styled(Typography)(({ theme }) => ({\r\n  display: 'flex',\r\n  marginBottom: theme.spacing(0.75),\r\n  color: theme.palette.text.secondary\r\n}));\r\n\r\nconst MessageImgStyle = styled('img')(({ theme }) => ({\r\n  height: 200,\r\n  minWidth: 296,\r\n  width: '100%',\r\n  cursor: 'pointer',\r\n  objectFit: 'cover',\r\n  borderRadius: theme.shape.borderRadius\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatMessageItem.propTypes = {\r\n  message: PropTypes.object.isRequired,\r\n  conversation: PropTypes.object.isRequired,\r\n  onOpenLightbox: PropTypes.func\r\n};\r\n\r\nexport default function ChatMessageItem({ message, conversation, onOpenLightbox, ...other }) {\r\n  const sender = conversation.participants.find((participant) => participant.id === message.senderId);\r\n  const senderDetails =\r\n    message.senderId === '8864c717-587d-472a-929a-8e5f298024da-0'\r\n      ? { type: 'me' }\r\n      : { avatar: sender.avatar, name: sender.name };\r\n\r\n  const isMe = senderDetails.type === 'me';\r\n  const isImage = message.contentType === 'image';\r\n  const firstName = senderDetails.name && senderDetails.name.split(' ')[0];\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          ...(isMe && {\r\n            ml: 'auto'\r\n          })\r\n        }}\r\n      >\r\n        {senderDetails.type !== 'me' && (\r\n          <Avatar alt={senderDetails.name} src={senderDetails.avatar} sx={{ width: 32, height: 32 }} />\r\n        )}\r\n\r\n        <Box sx={{ ml: 2 }}>\r\n          <InfoStyle noWrap variant=\"caption\" sx={{ ...(isMe && { justifyContent: 'flex-end' }) }}>\r\n            {!isMe && `${firstName},`}&nbsp;\r\n            {formatDistanceToNowStrict(new Date(message.createdAt), {\r\n              addSuffix: true\r\n            })}\r\n          </InfoStyle>\r\n\r\n          <ContentStyle\r\n            sx={{\r\n              ...(isMe && {\r\n                color: 'grey.800',\r\n                bgcolor: 'primary.lighter'\r\n              })\r\n            }}\r\n          >\r\n            {isImage ? (\r\n              <MessageImgStyle alt=\"attachment\" src={message.body} onClick={() => onOpenLightbox(message.body)} />\r\n            ) : (\r\n              <Typography variant=\"body2\">{message.body}</Typography>\r\n            )}\r\n          </ContentStyle>\r\n        </Box>\r\n      </Box>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { findIndex } from 'lodash';\r\nimport { useEffect, useState, useRef } from 'react';\r\n//\r\nimport Scrollbar from '../../Scrollbar';\r\nimport LightboxModal from '../../LightboxModal';\r\nimport ChatMessageItem from './ChatMessageItem';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatMessageList.propTypes = {\r\n  conversation: PropTypes.object.isRequired\r\n};\r\n\r\nexport default function ChatMessageList({ conversation }) {\r\n  const scrollRef = useRef();\r\n  const [openLightbox, setOpenLightbox] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const scrollMessagesToBottom = () => {\r\n      if (scrollRef.current) {\r\n        scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\r\n      }\r\n    };\r\n    scrollMessagesToBottom();\r\n  }, [conversation.messages]);\r\n\r\n  const images = conversation.messages\r\n    .filter((messages) => messages.contentType === 'image')\r\n    .map((messages) => messages.body);\r\n\r\n  const handleOpenLightbox = (url) => {\r\n    const selectedImage = findIndex(images, (index) => index === url);\r\n    setOpenLightbox(true);\r\n    setSelectedImage(selectedImage);\r\n  };\r\n\r\n  return (\r\n    <Scrollbar scrollableNodeProps={{ ref: scrollRef }} sx={{ p: 3, flexGrow: 1 }}>\r\n      {conversation.messages.map((message) => (\r\n        <ChatMessageItem\r\n          key={message.id}\r\n          message={message}\r\n          conversation={conversation}\r\n          onOpenLightbox={handleOpenLightbox}\r\n        />\r\n      ))}\r\n\r\n      <LightboxModal\r\n        images={images}\r\n        photoIndex={selectedImage}\r\n        setPhotoIndex={setSelectedImage}\r\n        isOpen={openLightbox}\r\n        onClose={() => setOpenLightbox(false)}\r\n      />\r\n    </Scrollbar>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { uniq, flatten } from 'lodash';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, Button, Divider, Collapse, Typography } from '@material-ui/core';\r\n// utils\r\nimport { fDateTime } from '../../../utils/formatTime';\r\nimport { getFileFullName, getFileThumb } from '../../../utils/getFileFormat';\r\n//\r\nimport Scrollbar from '../../Scrollbar';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  flexGrow: 1,\r\n  height: '100%',\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  flexDirection: 'column',\r\n  paddingBottom: theme.spacing(2)\r\n}));\r\n\r\nconst FileItemStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  marginTop: theme.spacing(2),\r\n  padding: theme.spacing(0, 2.5)\r\n}));\r\n\r\nconst FileThumbStyle = styled('div')(({ theme }) => ({\r\n  width: 40,\r\n  height: 40,\r\n  flexShrink: 0,\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  color: theme.palette.text.secondary,\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: theme.palette.grey[500_16],\r\n  '& img': { width: '100%', height: '100%' },\r\n  '& svg': { width: 24, height: 24 }\r\n}));\r\n\r\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\r\n  ...theme.typography.overline,\r\n  height: 40,\r\n  flexShrink: 0,\r\n  borderRadius: 0,\r\n  padding: theme.spacing(1, 2),\r\n  justifyContent: 'space-between',\r\n  color: theme.palette.text.disabled\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nAttachmentItem.propTypes = {\r\n  file: PropTypes.object,\r\n  fileUrl: PropTypes.string\r\n};\r\n\r\nfunction AttachmentItem({ file, fileUrl }) {\r\n  return (\r\n    <FileItemStyle key={fileUrl}>\r\n      <FileThumbStyle>{getFileThumb(fileUrl)}</FileThumbStyle>\r\n      <Box sx={{ ml: 1.5, maxWidth: 150 }}>\r\n        <Typography variant=\"body2\" noWrap>\r\n          {getFileFullName(fileUrl)}\r\n        </Typography>\r\n        <Typography noWrap variant=\"caption\" sx={{ color: 'text.secondary', display: 'block' }}>\r\n          {fDateTime(file.createdAt)}\r\n        </Typography>\r\n      </Box>\r\n    </FileItemStyle>\r\n  );\r\n}\r\n\r\nChatRoomAttachment.propTypes = {\r\n  conversation: PropTypes.object.isRequired,\r\n  isCollapse: PropTypes.bool,\r\n  onCollapse: PropTypes.func\r\n};\r\n\r\nexport default function ChatRoomAttachment({ conversation, isCollapse, onCollapse, ...other }) {\r\n  const totalAttachment = uniq(flatten(conversation.messages.map((item) => item.attachments))).length;\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      <CollapseButtonStyle\r\n        fullWidth\r\n        color=\"inherit\"\r\n        onClick={onCollapse}\r\n        endIcon={<Icon icon={isCollapse ? arrowIosDownwardFill : arrowIosForwardFill} width={16} height={16} />}\r\n      >\r\n        attachment ({totalAttachment})\r\n      </CollapseButtonStyle>\r\n\r\n      {!isCollapse && <Divider />}\r\n\r\n      <Scrollbar>\r\n        <Collapse in={isCollapse}>\r\n          {conversation.messages.map((file) => (\r\n            <div key={file.id}>\r\n              {file.attachments.map((fileUrl) => (\r\n                <AttachmentItem key={fileUrl} file={file} fileUrl={fileUrl} />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </Collapse>\r\n      </Scrollbar>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport pinFill from '@iconify/icons-eva/pin-fill';\r\nimport phoneFill from '@iconify/icons-eva/phone-fill';\r\nimport emailFill from '@iconify/icons-eva/email-fill';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, Avatar, Button, Divider, Collapse, Typography, Stack } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\r\n  ...theme.typography.overline,\r\n  height: 40,\r\n  borderRadius: 0,\r\n  padding: theme.spacing(1, 2),\r\n  justifyContent: 'space-between',\r\n  color: theme.palette.text.disabled\r\n}));\r\n\r\nconst RowIconStyle = styled(Icon)(({ theme }) => ({\r\n  width: 16,\r\n  height: 16,\r\n  marginTop: 4,\r\n  color: theme.palette.text.secondary\r\n}));\r\n\r\nconst RowTextStyle = styled(Typography)(({ theme }) => ({\r\n  flexGrow: 1,\r\n  maxWidth: 160,\r\n  wordWrap: 'break-word',\r\n  ...theme.typography.body2\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatRoomOneParticipant.propTypes = {\r\n  participants: PropTypes.array.isRequired,\r\n  isCollapse: PropTypes.bool,\r\n  onCollapse: PropTypes.func\r\n};\r\n\r\nexport default function ChatRoomOneParticipant({ participants, isCollapse, onCollapse, ...other }) {\r\n  const participant = [...participants][0];\r\n\r\n  if (participant === undefined) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Box {...other}>\r\n      <Box\r\n        sx={{\r\n          pt: 4,\r\n          pb: 3,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          flexDirection: 'column'\r\n        }}\r\n      >\r\n        <Avatar alt={participant.name} src={participant.avatar} sx={{ width: 96, height: 96 }} />\r\n        <Box sx={{ mt: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle1\">{participant.name}</Typography>\r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n            {participant.position}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Divider />\r\n\r\n      <CollapseButtonStyle\r\n        fullWidth\r\n        color=\"inherit\"\r\n        onClick={onCollapse}\r\n        endIcon={<Icon icon={isCollapse ? arrowIosDownwardFill : arrowIosForwardFill} width={16} height={16} />}\r\n      >\r\n        information\r\n      </CollapseButtonStyle>\r\n\r\n      <Collapse in={isCollapse}>\r\n        <Stack spacing={2} sx={{ p: 2.5, pt: 1 }}>\r\n          <Stack direction=\"row\" spacing={1}>\r\n            <RowIconStyle icon={pinFill} />\r\n            <RowTextStyle>{participant.address}</RowTextStyle>\r\n          </Stack>\r\n          <Stack direction=\"row\" spacing={1}>\r\n            <RowIconStyle icon={phoneFill} />\r\n            <RowTextStyle>{participant.phone}</RowTextStyle>\r\n          </Stack>\r\n          <Stack direction=\"row\" spacing={1}>\r\n            <RowIconStyle icon={emailFill} />\r\n            <RowTextStyle>{participant.email}</RowTextStyle>\r\n          </Stack>\r\n        </Stack>\r\n      </Collapse>\r\n    </Box>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport pinFill from '@iconify/icons-eva/pin-fill';\r\nimport phoneFill from '@iconify/icons-eva/phone-fill';\r\nimport emailFill from '@iconify/icons-eva/email-fill';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Avatar, Typography, DialogContent } from '@material-ui/core';\r\n//\r\nimport { DialogAnimate } from '../../animate';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RowStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  marginTop: theme.spacing(1.5)\r\n}));\r\n\r\nconst IconStyle = styled(Icon)(({ theme }) => ({\r\n  width: 16,\r\n  height: 16,\r\n  marginRight: theme.spacing(1),\r\n  color: theme.palette.text.secondary\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatRoomPopup.propTypes = {\r\n  participant: PropTypes.object,\r\n  isOpen: PropTypes.bool,\r\n  onClose: PropTypes.func\r\n};\r\n\r\nexport default function ChatRoomPopup({ participant, isOpen, onClose, ...other }) {\r\n  const { name, avatar, position, address, phone, email } = participant;\r\n\r\n  return (\r\n    <DialogAnimate fullWidth maxWidth=\"xs\" open={isOpen} onClose={onClose} {...other}>\r\n      <DialogContent sx={{ pb: 5, textAlign: 'center' }}>\r\n        <Avatar\r\n          alt={name}\r\n          src={avatar}\r\n          sx={{\r\n            mt: 5,\r\n            mb: 2,\r\n            mx: 'auto',\r\n            width: 96,\r\n            height: 96\r\n          }}\r\n        />\r\n        <Typography variant=\"h6\">{name}</Typography>\r\n        <Typography variant=\"body2\" paragraph sx={{ color: 'text.secondary' }}>\r\n          {position}\r\n        </Typography>\r\n\r\n        <RowStyle>\r\n          <IconStyle icon={pinFill} />\r\n          <Typography variant=\"body2\">{address}</Typography>\r\n        </RowStyle>\r\n        <RowStyle>\r\n          <IconStyle icon={phoneFill} />\r\n          <Typography variant=\"body2\">{phone}</Typography>\r\n        </RowStyle>\r\n        <RowStyle>\r\n          <IconStyle icon={emailFill} />\r\n          <Typography variant=\"body2\">{email}</Typography>\r\n        </RowStyle>\r\n      </DialogContent>\r\n    </DialogAnimate>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, List, Avatar, Button, Collapse, ListItem, ListItemText, ListItemAvatar } from '@material-ui/core';\r\n//\r\nimport Scrollbar from '../../Scrollbar';\r\nimport BadgeStatus from '../../BadgeStatus';\r\nimport ChatRoomPopup from './ChatRoomPopup';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst HEIGHT = 64;\r\n\r\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\r\n  ...theme.typography.overline,\r\n  height: 40,\r\n  borderRadius: 0,\r\n  padding: theme.spacing(1, 2),\r\n  justifyContent: 'space-between',\r\n  color: theme.palette.text.disabled\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nParticipant.propTypes = {\r\n  participant: PropTypes.object.isRequired,\r\n  isOpen: PropTypes.bool,\r\n  onClosePopup: PropTypes.func,\r\n  onShowPopup: PropTypes.func\r\n};\r\n\r\nfunction Participant({ participant, isOpen, onClosePopup, onShowPopup }) {\r\n  const { name, avatar, status, position } = participant;\r\n\r\n  return (\r\n    <>\r\n      <ListItem button disableGutters onClick={onShowPopup} sx={{ height: HEIGHT, px: 2.5 }}>\r\n        <ListItemAvatar>\r\n          <Box sx={{ position: 'relative', width: 40, height: 40 }}>\r\n            <Avatar alt={name} src={avatar} />\r\n            <BadgeStatus status={status} sx={{ right: 0, bottom: 0, position: 'absolute' }} />\r\n          </Box>\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary={name}\r\n          secondary={position}\r\n          primaryTypographyProps={{ variant: 'subtitle2', noWrap: true }}\r\n          secondaryTypographyProps={{ noWrap: true }}\r\n        />\r\n      </ListItem>\r\n      <ChatRoomPopup participant={participant} isOpen={isOpen} onClose={onClosePopup} />\r\n    </>\r\n  );\r\n}\r\n\r\nChatRoomGroupParticipant.propTypes = {\r\n  participants: PropTypes.array.isRequired,\r\n  selectUserId: PropTypes.string,\r\n  onShowPopupUserInfo: PropTypes.func,\r\n  isCollapse: PropTypes.bool,\r\n  onCollapse: PropTypes.func\r\n};\r\n\r\nexport default function ChatRoomGroupParticipant({\r\n  participants,\r\n  selectUserId,\r\n  onShowPopupUserInfo,\r\n  isCollapse,\r\n  onCollapse,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Box {...other}>\r\n      <CollapseButtonStyle\r\n        fullWidth\r\n        disableRipple\r\n        color=\"inherit\"\r\n        onClick={onCollapse}\r\n        endIcon={<Icon icon={isCollapse ? arrowIosDownwardFill : arrowIosForwardFill} width={16} height={16} />}\r\n      >\r\n        In room ({participants.length})\r\n      </CollapseButtonStyle>\r\n\r\n      <Box sx={{ height: isCollapse ? HEIGHT * 4 : 0 }}>\r\n        <Scrollbar>\r\n          <Collapse in={isCollapse}>\r\n            <List disablePadding>\r\n              {participants.map((participant) => (\r\n                <Participant\r\n                  key={participant.id}\r\n                  participant={participant}\r\n                  isOpen={selectUserId === participant.id}\r\n                  onShowPopup={() => onShowPopupUserInfo(participant.id)}\r\n                  onClosePopup={() => onShowPopupUserInfo(null)}\r\n                />\r\n              ))}\r\n            </List>\r\n          </Collapse>\r\n        </Scrollbar>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { useState, useEffect } from 'react';\r\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\n// material\r\nimport { useTheme, experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { useMediaQuery, Divider, IconButton } from '@material-ui/core';\r\n//\r\nimport ChatRoomAttachment from './ChatRoomAttachment';\r\nimport ChatRoomOneParticipant from './ChatRoomOneParticipant';\r\nimport ChatRoomGroupParticipant from './ChatRoomGroupParticipant';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  width: 240,\r\n  flexShrink: 0,\r\n  display: 'flex',\r\n  position: 'relative',\r\n  flexDirection: 'column',\r\n  borderLeft: `solid 1px ${theme.palette.divider}`,\r\n  transition: theme.transitions.create('width')\r\n}));\r\n\r\nconst ToggleButtonStyle = styled('div')(({ theme }) => ({\r\n  borderRight: 0,\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  position: 'absolute',\r\n  alignItems: 'center',\r\n  top: theme.spacing(1),\r\n  left: theme.spacing(-4),\r\n  width: theme.spacing(4),\r\n  height: theme.spacing(4),\r\n  justifyContent: 'center',\r\n  boxShadow: theme.customShadows.z8,\r\n  border: `solid 1px ${theme.palette.divider}`,\r\n  borderTopLeftRadius: theme.shape.borderRadius,\r\n  backgroundColor: theme.palette.background.paper,\r\n  borderBottomLeftRadius: theme.shape.borderRadius\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatRoom.propTypes = {\r\n  conversation: PropTypes.object.isRequired,\r\n  participants: PropTypes.array.isRequired\r\n};\r\n\r\nexport default function ChatRoom({ conversation, participants, ...other }) {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('lg'));\r\n  const [openSidebar, setOpenSidebar] = useState(true);\r\n  const [showInfo, setShowInfo] = useState(true);\r\n  const [selectUser, setSelectUser] = useState(null);\r\n  const [showAttachment, setShowAttachment] = useState(true);\r\n  const [showParticipants, setShowParticipants] = useState(true);\r\n  const isGroup = participants.length > 1;\r\n\r\n  useEffect(() => {\r\n    if (isMobile) {\r\n      return setOpenSidebar(false);\r\n    }\r\n    return setOpenSidebar(true);\r\n  }, [isMobile]);\r\n\r\n  return (\r\n    <RootStyle\r\n      sx={{\r\n        ...(!openSidebar && {\r\n          width: 0,\r\n          '& > *': { overflow: 'hidden' }\r\n        })\r\n      }}\r\n      {...other}\r\n    >\r\n      <ToggleButtonStyle>\r\n        <IconButton onClick={() => setOpenSidebar(!openSidebar)}>\r\n          <Icon width={16} height={16} icon={openSidebar ? arrowIosForwardFill : arrowIosBackFill} />\r\n        </IconButton>\r\n      </ToggleButtonStyle>\r\n\r\n      {isGroup ? (\r\n        <ChatRoomGroupParticipant\r\n          selectUserId={selectUser}\r\n          participants={participants}\r\n          isCollapse={showParticipants}\r\n          onShowPopupUserInfo={(participantId) => setSelectUser(participantId)}\r\n          onCollapse={() => setShowParticipants((prev) => !prev)}\r\n        />\r\n      ) : (\r\n        <ChatRoomOneParticipant\r\n          participants={participants}\r\n          isCollapse={showInfo}\r\n          onCollapse={() => setShowInfo((prev) => !prev)}\r\n        />\r\n      )}\r\n      <Divider />\r\n\r\n      <ChatRoomAttachment\r\n        conversation={conversation}\r\n        isCollapse={showAttachment}\r\n        onCollapse={() => setShowAttachment((prev) => !prev)}\r\n      />\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { List, Avatar, ListItem, Typography, ListItemText, ListItemAvatar } from '@material-ui/core';\r\n//\r\nimport SearchNotFound from '../../SearchNotFound';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatSearchResults.propTypes = {\r\n  query: PropTypes.string,\r\n  results: PropTypes.array,\r\n  onSelectContact: PropTypes.func\r\n};\r\n\r\nexport default function ChatSearchResults({ query, results, onSelectContact }) {\r\n  const isFound = results.length > 0;\r\n\r\n  return (\r\n    <>\r\n      <Typography paragraph variant=\"subtitle1\" sx={{ px: 3, color: 'text.secondary' }}>\r\n        Contacts\r\n      </Typography>\r\n\r\n      <List disablePadding>\r\n        {results.map((result) => (\r\n          <ListItem\r\n            key={result.id}\r\n            button\r\n            onClick={() => onSelectContact(result)}\r\n            sx={{\r\n              py: 1.5,\r\n              px: 3\r\n            }}\r\n          >\r\n            <ListItemAvatar>\r\n              <Avatar alt={result.name} src={result.avatar} />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={result.name}\r\n              primaryTypographyProps={{\r\n                noWrap: true,\r\n                variant: 'subtitle2'\r\n              }}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      {!isFound && (\r\n        <SearchNotFound\r\n          searchQuery={query}\r\n          sx={{\r\n            p: 3,\r\n            mx: 'auto',\r\n            width: `calc(100% - 48px)`,\r\n            bgcolor: 'background.neutral'\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { Icon } from '@iconify/react';\r\nimport { useState, useEffect } from 'react';\r\nimport editFill from '@iconify/icons-eva/edit-fill';\r\n\r\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\r\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\n// material\r\nimport { useTheme, experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, useMediaQuery } from '@material-ui/core';\r\n// redux\r\nimport { useSelector } from '../../../redux/store';\r\n// utils\r\nimport axios from '../../../utils/axios';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n//\r\nimport { MIconButton } from '../../@material-extend';\r\nimport Scrollbar from '../../Scrollbar';\r\nimport ChatAccount from './ChatAccount';\r\nimport ChatSearchResults from './ChatSearchResults';\r\nimport ChatContactSearch from './ChatContactSearch';\r\nimport ChatConversationList from './ChatConversationList';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  width: 320,\r\n  flexShrink: 0,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  transition: theme.transitions.create('width'),\r\n  borderRight: `1px solid ${theme.palette.divider}`\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ChatSidebar() {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n  const [openSidebar, setOpenSidebar] = useState(true);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [isSearchFocused, setSearchFocused] = useState(false);\r\n  const displayResults = searchQuery && isSearchFocused;\r\n  const { conversations, activeConversationId } = useSelector((state) => state.chat);\r\n\r\n  useEffect(() => {\r\n    if (isMobile) {\r\n      return setOpenSidebar(false);\r\n    }\r\n    return setOpenSidebar(true);\r\n  }, [isMobile]);\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  useEffect(() => {\r\n    if (!openSidebar) {\r\n      return setSearchFocused(false);\r\n    }\r\n  }, [openSidebar]);\r\n\r\n  const handleClickAwaySearch = () => {\r\n    setSearchFocused(false);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  const handleChangeSearch = async (event) => {\r\n    try {\r\n      const { value } = event.target;\r\n      setSearchQuery(value);\r\n      if (value) {\r\n        const response = await axios.get('/api/chat/search', {\r\n          params: { query: value }\r\n        });\r\n        setSearchResults(response.data.results);\r\n      } else {\r\n        setSearchResults([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleSearchFocus = () => {\r\n    setSearchFocused(true);\r\n  };\r\n\r\n  const handleSearchSelect = (username) => {\r\n    setSearchFocused(false);\r\n    setSearchQuery('');\r\n    navigate(`${PATH_DASHBOARD.chat.root}/${username}`);\r\n  };\r\n\r\n  const handleSelectContact = (result) => {\r\n    if (handleSearchSelect) {\r\n      handleSearchSelect(result.username);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <RootStyle sx={{ ...(!openSidebar && { width: 96 }) }}>\r\n      <Box sx={{ py: 2, px: 3 }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          {openSidebar && (\r\n            <>\r\n              <ChatAccount />\r\n              <Box sx={{ flexGrow: 1 }} />\r\n            </>\r\n          )}\r\n\r\n          <MIconButton onClick={() => setOpenSidebar(!openSidebar)}>\r\n            <Icon width={20} height={20} icon={openSidebar ? arrowIosBackFill : arrowIosForwardFill} />\r\n          </MIconButton>\r\n\r\n          {openSidebar && (\r\n            <MIconButton to={PATH_DASHBOARD.chat.new} component={RouterLink}>\r\n              <Icon icon={editFill} width={20} height={20} />\r\n            </MIconButton>\r\n          )}\r\n        </Box>\r\n\r\n        {openSidebar && (\r\n          <ChatContactSearch\r\n            query={searchQuery}\r\n            onFocus={handleSearchFocus}\r\n            onChange={handleChangeSearch}\r\n            onClickAway={handleClickAwaySearch}\r\n          />\r\n        )}\r\n      </Box>\r\n\r\n      <Scrollbar>\r\n        {!displayResults ? (\r\n          <ChatConversationList\r\n            conversations={conversations}\r\n            isOpenSidebar={openSidebar}\r\n            activeConversationId={activeConversationId}\r\n            sx={{ ...(isSearchFocused && { display: 'none' }) }}\r\n          />\r\n        ) : (\r\n          <ChatSearchResults query={searchQuery} results={searchResults} onSelectContact={handleSelectContact} />\r\n        )}\r\n      </Scrollbar>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\r\n// material\r\nimport { Box, Divider } from '@material-ui/core';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../../redux/store';\r\nimport {\r\n  addRecipients,\r\n  onSendMessage,\r\n  getConversation,\r\n  getParticipants,\r\n  markConversationAsRead,\r\n  resetActiveConversation\r\n} from '../../../redux/slices/chat';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n//\r\nimport ChatRoom from './ChatRoom';\r\nimport ChatMessageList from './ChatMessageList';\r\nimport ChatHeaderDetail from './ChatHeaderDetail';\r\nimport ChatMessageInput from './ChatMessageInput';\r\nimport ChatHeaderCompose from './ChatHeaderCompose';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst conversationSelector = (state) => {\r\n  const { conversations, activeConversationId } = state.chat;\r\n  const conversation = conversations.byId[activeConversationId];\r\n  if (conversation) {\r\n    return conversation;\r\n  }\r\n  return {\r\n    id: null,\r\n    messages: [],\r\n    participants: [],\r\n    unreadMessages: 0\r\n  };\r\n};\r\n\r\nexport default function ChatWindow() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { pathname } = useLocation();\r\n  const { conversationKey } = useParams();\r\n  const { contacts, recipients, participants, activeConversationId } = useSelector((state) => state.chat);\r\n  const conversation = useSelector((state) => conversationSelector(state));\r\n  const mode = conversationKey ? 'DETAIL' : 'COMPOSE';\r\n\r\n  const displayParticipants = participants.filter((item) => item.id !== '8864c717-587d-472a-929a-8e5f298024da-0');\r\n\r\n  useEffect(() => {\r\n    const getDetails = async () => {\r\n      dispatch(getParticipants(conversationKey));\r\n      try {\r\n        dispatch(getConversation(conversationKey));\r\n      } catch (error) {\r\n        console.error(error);\r\n        navigate(PATH_DASHBOARD.chat.new);\r\n      }\r\n    };\r\n    if (conversationKey) {\r\n      getDetails();\r\n    } else if (activeConversationId) {\r\n      dispatch(resetActiveConversation());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [conversationKey]);\r\n\r\n  useEffect(() => {\r\n    if (activeConversationId) {\r\n      dispatch(markConversationAsRead(activeConversationId));\r\n    }\r\n  }, [dispatch, activeConversationId]);\r\n\r\n  const handleAddRecipient = (recipient) => {\r\n    dispatch(addRecipients(recipient));\r\n  };\r\n\r\n  const handleSendMessage = async (value) => {\r\n    try {\r\n      dispatch(onSendMessage(value));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\r\n      {mode === 'DETAIL' ? (\r\n        <ChatHeaderDetail participants={displayParticipants} />\r\n      ) : (\r\n        <ChatHeaderCompose\r\n          recipients={recipients}\r\n          contacts={Object.values(contacts.byId)}\r\n          onAddRecipient={handleAddRecipient}\r\n        />\r\n      )}\r\n\r\n      <Divider />\r\n\r\n      <Box sx={{ flexGrow: 1, display: 'flex', overflow: 'hidden' }}>\r\n        <Box sx={{ display: 'flex', flexGrow: 1, flexDirection: 'column' }}>\r\n          <ChatMessageList conversation={conversation} />\r\n\r\n          <Divider />\r\n\r\n          <ChatMessageInput\r\n            conversationId={activeConversationId}\r\n            onSend={handleSendMessage}\r\n            disabled={pathname === PATH_DASHBOARD.chat.new}\r\n          />\r\n        </Box>\r\n\r\n        {mode === 'DETAIL' && <ChatRoom conversation={conversation} participants={displayParticipants} />}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\n// material\r\nimport { Card, Container } from '@material-ui/core';\r\n// redux\r\nimport { useDispatch } from '../../redux/store';\r\nimport { getConversations, getContacts } from '../../redux/slices/chat';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport { ChatSidebar, ChatWindow } from '../../components/_dashboard/chat';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Chat() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getConversations());\r\n    dispatch(getContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page title=\"Chat | Minimal-UI\">\r\n      <Container maxWidth=\"xl\">\r\n        <HeaderBreadcrumbs\r\n          heading=\"Chat\"\r\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Chat' }]}\r\n        />\r\n        <Card sx={{ height: '72vh', display: 'flex' }}>\r\n          <ChatSidebar />\r\n          <ChatWindow />\r\n        </Card>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}