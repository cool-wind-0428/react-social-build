{"version":3,"sources":["components/HeaderBreadcrumbs.js","pages/components-overview/Block.js","../node_modules/@material-ui/core/CardHeader/cardHeaderClasses.js","../node_modules/@material-ui/core/CardHeader/CardHeader.js","../node_modules/@material-ui/core/DialogActions/dialogActionsClasses.js","../node_modules/@material-ui/core/DialogActions/DialogActions.js","../node_modules/@material-ui/icons/Add.js","../node_modules/@material-ui/core/ListItemAvatar/listItemAvatarClasses.js","../node_modules/@material-ui/core/ListItemAvatar/ListItemAvatar.js","../node_modules/@material-ui/core/DialogTitle/dialogTitleClasses.js","../node_modules/@material-ui/core/DialogTitle/DialogTitle.js","../node_modules/@material-ui/core/DialogContent/dialogContentClasses.js","../node_modules/@material-ui/core/DialogContent/DialogContent.js","../node_modules/@material-ui/icons/Person.js","../node_modules/@material-ui/icons/Close.js","../node_modules/@material-ui/core/DialogContentText/dialogContentTextClasses.js","../node_modules/@material-ui/core/DialogContentText/DialogContentText.js","pages/components-overview/material-ui/dialog/FormDialogs.js","pages/components-overview/material-ui/dialog/AlertDialog.js","pages/components-overview/material-ui/dialog/ScrollDialog.js","pages/components-overview/material-ui/dialog/SimpleDialogs.js","pages/components-overview/material-ui/dialog/MaxWidthDialog.js","pages/components-overview/material-ui/dialog/FullScreenDialogs.js","pages/components-overview/material-ui/dialog/TransitionsDialogs.js","pages/components-overview/material-ui/dialog/index.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","spacing","direction","alignItems","flexGrow","variant","gutterBottom","flexShrink","isString","href","target","map","noWrap","display","Label","title","component","color","Block","children","overflow","position","width","p","minHeight","getCardHeaderUtilityClass","slot","generateUtilityClass","cardHeaderClasses","generateUtilityClasses","CardHeaderRoot","experimentalStyled","name","overridesResolver","props","styles","_extends","subheader","root","padding","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","content","CardHeader","React","inProps","ref","useThemeProps","className","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","_objectWithoutPropertiesLoose","styleProps","classes","composeClasses","useUtilityClasses","type","Typography","_jsx","_jsxs","clsx","as","getDialogActionsUtilityClass","DialogActionsRoot","disableSpacing","justifyContent","marginLeft","DialogActions","slots","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","getListItemAvatarUtilityClass","ListItemAvatarRoot","alignItemsFlexStart","minWidth","ListItemAvatar","context","ListContext","getDialogTitleUtilityClass","DialogTitleRoot","margin","DialogTitle","getDialogContentUtilityClass","DialogContentRoot","dividers","theme","WebkitOverflowScrolling","overflowY","paddingTop","borderTop","palette","divider","borderBottom","DialogContent","getDialogContentTextUtilityClass","DialogContentTextRoot","shouldForwardProp","prop","rootShouldForwardProp","DialogContentText","composedClasses","FormDialogs","useState","open","setOpen","handleClose","onClick","Dialog","onClose","TextField","autoFocus","fullWidth","label","Button","AlertDialog","id","ScrollDialog","scroll","setScroll","handleClickOpen","scrollType","descriptionElementRef","useRef","useEffect","descriptionElement","current","focus","mr","pb","tabIndex","Array","join","emails","SimpleDialog","selectedValue","setSelectedValue","Box","textAlign","List","email","ListItem","button","Avatar","backgroundColor","ListItemText","primary","MaxWidthDialog","setFullWidth","maxWidth","setMaxWidth","noValidate","flexDirection","FormControl","mt","InputLabel","htmlFor","Select","onChange","event","inputProps","MenuItem","FormControlLabel","control","Switch","checked","Transition","forwardRef","Slide","FullScreenDialogs","fullScreen","TransitionComponent","AppBar","Toolbar","IconButton","edge","ml","secondary","Divider","TransitionsDialogs","keepMounted","aria-labelledby","aria-describedby","style","RootStyle","styled","Page","paddingBottom","DialogComponent","pt","bgcolor","mode","Container","PATH_PAGE","components","Grid","container","item","xs","md"],"mappings":"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","file":"static/js/46.ee5b357f.chunk.js","sourcesContent":["import { isString } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n// material\r\nimport { Box, Typography, Link, Stack } from '@material-ui/core';\r\n//\r\nimport { MBreadcrumbs } from './@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeaderBreadcrumbs.propTypes = {\r\n  links: PropTypes.array,\r\n  action: PropTypes.node,\r\n  heading: PropTypes.string.isRequired,\r\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\r\n  return (\r\n    <Stack sx={sx} mb={5} spacing={2}>\r\n      <Stack direction=\"row\" alignItems=\"center\">\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <MBreadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Stack>\r\n\r\n      {isString(moreLink) ? (\r\n        <Link href={moreLink} target=\"_blank\" variant=\"body2\">\r\n          {moreLink}\r\n        </Link>\r\n      ) : (\r\n        moreLink.map((href) => (\r\n          <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'flex' }}>\r\n            {href}\r\n          </Link>\r\n        ))\r\n      )}\r\n    </Stack>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { Card, CardHeader, Box, Typography } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nLabel.propTypes = {\r\n  title: PropTypes.string\r\n};\r\n\r\nexport function Label({ title }) {\r\n  return (\r\n    <Typography variant=\"overline\" component=\"p\" gutterBottom sx={{ color: 'text.secondary' }}>\r\n      {title}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nBlock.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport function Block({ title, sx, children }) {\r\n  return (\r\n    <Card sx={{ overflow: 'unset', position: 'unset', width: '100%' }}>\r\n      {title && <CardHeader title={title} />}\r\n      <Box\r\n        sx={{\r\n          p: 3,\r\n          minHeight: 180,\r\n          ...sx\r\n        }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  /* Styles applied to the root element. */\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  /* Styles applied to the avatar element. */\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  /* Styles applied to the action element. */\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  /* Styles applied to the content wrapper element. */\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  const styleProps = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    styleProps: styleProps\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      styleProps: styleProps,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      styleProps: styleProps,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      styleProps: styleProps,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disableSpacing\n  } = styleProps;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\n\nconst DialogActionsRoot = experimentalStyled('div', {}, {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, !styleProps.disableSpacing && styles.spacing);\n  }\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !styleProps.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n\n  const {\n    className,\n    disableSpacing = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"disableSpacing\"]);\n\n  const styleProps = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogActions;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getListItemAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemAvatar', slot);\n}\nconst listItemAvatarClasses = generateUtilityClasses('MuiListItemAvatar', ['root', 'alignItemsFlexStart']);\nexport default listItemAvatarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport ListContext from '../List/ListContext';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemAvatarUtilityClass } from './listItemAvatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    alignItems,\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\n\nconst ListItemAvatarRoot = experimentalStyled('div', {}, {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, styleProps.alignItems === 'flex-start' && styles.alignItemsFlexStart);\n  }\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  minWidth: 56,\n  flexShrink: 0\n}, styleProps.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\"]);\n\n  const context = React.useContext(ListContext);\n\n  const styleProps = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default ListItemAvatar;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getDialogTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogTitle', slot);\n}\nconst dialogTitleClasses = generateUtilityClasses('MuiDialogTitle', ['root']);\nexport default dialogTitleClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\n\nconst DialogTitleRoot = experimentalStyled('div', {}, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    /* Styles applied to the root element. */\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  };\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n\n  const {\n    children,\n    className,\n    disableTypography = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"disableTypography\"]);\n\n  const styleProps = _extends({}, props, {\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other, {\n    children: disableTypography ? children : /*#__PURE__*/_jsx(Typography, {\n      component: \"h2\",\n      variant: \"h6\",\n      children: children\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogTitle;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getDialogContentUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContent', slot);\n}\nconst dialogContentClasses = generateUtilityClasses('MuiDialogContent', ['root', 'dividers']);\nexport default dialogContentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogContentUtilityClass } from './dialogContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    dividers\n  } = styleProps;\n  const slots = {\n    root: ['root', dividers && 'dividers']\n  };\n  return composeClasses(slots, getDialogContentUtilityClass, classes);\n};\n\nconst DialogContentRoot = experimentalStyled('div', {}, {\n  name: 'MuiDialogContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, styleProps.dividers && styles.dividers);\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  flex: '1 1 auto',\n  WebkitOverflowScrolling: 'touch',\n  // Add iOS momentum scrolling.\n  overflowY: 'auto',\n  padding: '8px 24px',\n  '&:first-of-type': {\n    // dialog without title\n    paddingTop: 20\n  }\n}, styleProps.dividers && {\n  padding: '16px 24px',\n  borderTop: `1px solid ${theme.palette.divider}`,\n  borderBottom: `1px solid ${theme.palette.divider}`\n}));\nconst DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContent'\n  });\n\n  const {\n    className,\n    dividers = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"dividers\"]);\n\n  const styleProps = _extends({}, props, {\n    dividers\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(DialogContentRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   * @default false\n   */\n  dividers: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogContent;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled, { rootShouldForwardProp } from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst DialogContentTextRoot = experimentalStyled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes'\n}, {\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  marginBottom: 12\n});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n\n  const styleProps = _objectWithoutPropertiesLoose(props, [\"children\"]);\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    styleProps: styleProps\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogContentText;","import { useState } from 'react';\r\n// material\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  TextField,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText\r\n} from '@material-ui/core';\r\n//\r\nimport { MButton } from '../../../../components/@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function FormDialogs() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MButton variant=\"outlined\" color=\"warning\" onClick={handleClickOpen}>\r\n        Form Dialogs\r\n      </MButton>\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates occasionally.\r\n          </DialogContentText>\r\n          <TextField autoFocus fullWidth type=\"email\" margin=\"dense\" variant=\"outlined\" label=\"Email Address\" />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"inherit\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} variant=\"contained\">\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n// material\r\nimport { Button, Dialog, DialogTitle, DialogActions, DialogContent, DialogContentText } from '@material-ui/core';\r\n//\r\nimport { MButton } from '../../../../components/@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AlertDialog() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MButton color=\"info\" variant=\"outlined\" onClick={handleClickOpen}>\r\n        Open alert dialog\r\n      </MButton>\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Use Google's location service?</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to Google, even when no\r\n            apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Disagree</Button>\r\n          <Button onClick={handleClose} autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useRef, useEffect } from 'react';\r\n// material\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, DialogContentText } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ScrollDialog() {\r\n  const [open, setOpen] = useState(false);\r\n  const [scroll, setScroll] = useState('paper');\r\n\r\n  const handleClickOpen = (scrollType) => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const descriptionElementRef = useRef(null);\r\n  useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" onClick={handleClickOpen('paper')} sx={{ mr: 2 }}>\r\n        scroll=paper\r\n      </Button>\r\n      <Button variant=\"outlined\" onClick={handleClickOpen('body')}>\r\n        scroll=body\r\n      </Button>\r\n\r\n      <Dialog open={open} onClose={handleClose} scroll={scroll}>\r\n        <DialogTitle sx={{ pb: 2 }}>Subscribe</DialogTitle>\r\n        <DialogContent dividers={scroll === 'paper'}>\r\n          <DialogContentText id=\"scroll-dialog-description\" ref={descriptionElementRef} tabIndex={-1}>\r\n            {[...new Array(50)]\r\n              .map(\r\n                () => `Cras mattis consectetur purus sit amet fermentum.\r\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\r\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`\r\n              )\r\n              .join('\\n')}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button variant=\"contained\" onClick={handleClose}>\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n// material\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport {\r\n  Box,\r\n  List,\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  ListItem,\r\n  Typography,\r\n  DialogTitle,\r\n  ListItemText,\r\n  ListItemAvatar\r\n} from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\r\n\r\nexport default function SimpleDialog() {\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedValue, setSelectedValue] = useState(emails[1]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ textAlign: 'center' }}>\r\n      <Typography variant=\"subtitle1\" component=\"div\">\r\n        Selected: {selectedValue}\r\n      </Typography>\r\n      <br />\r\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n        Open simple dialog\r\n      </Button>\r\n\r\n      <Dialog open={open} onClose={() => handleClose(selectedValue)}>\r\n        <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\r\n        <List>\r\n          {emails.map((email) => (\r\n            <ListItem button onClick={() => handleClose(email)} key={email}>\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  sx={{\r\n                    color: 'info.main',\r\n                    backgroundColor: 'info.lighter'\r\n                  }}\r\n                >\r\n                  <PersonIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary={email} />\r\n            </ListItem>\r\n          ))}\r\n\r\n          <ListItem autoFocus button onClick={() => handleClose('addAccount')}>\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <AddIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary=\"Add account\" />\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n// material\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  Select,\r\n  Switch,\r\n  MenuItem,\r\n  InputLabel,\r\n  DialogTitle,\r\n  FormControl,\r\n  DialogActions,\r\n  DialogContent,\r\n  FormControlLabel,\r\n  DialogContentText\r\n} from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MaxWidthDialog() {\r\n  const [open, setOpen] = useState(false);\r\n  const [fullWidth, setFullWidth] = useState(true);\r\n  const [maxWidth, setMaxWidth] = useState('sm');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMaxWidthChange = (event) => {\r\n    setMaxWidth(event.target.value);\r\n  };\r\n\r\n  const handleFullWidthChange = (event) => {\r\n    setFullWidth(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n        Max Width Dialog\r\n      </Button>\r\n\r\n      <Dialog open={open} maxWidth={maxWidth} onClose={handleClose} fullWidth={fullWidth}>\r\n        <DialogTitle>Optional sizes</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>You can set my maximum width and whether to adapt or not.</DialogContentText>\r\n\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            sx={{\r\n              margin: 'auto',\r\n              display: 'flex',\r\n              width: 'fit-content',\r\n              flexDirection: 'column'\r\n            }}\r\n          >\r\n            <FormControl\r\n              sx={{\r\n                mt: 2,\r\n                minWidth: 120\r\n              }}\r\n            >\r\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n              <Select\r\n                autoFocus\r\n                value={maxWidth}\r\n                onChange={handleMaxWidthChange}\r\n                inputProps={{\r\n                  name: 'max-width',\r\n                  id: 'max-width'\r\n                }}\r\n              >\r\n                <MenuItem value={false}>false</MenuItem>\r\n                <MenuItem value=\"xs\">xs</MenuItem>\r\n                <MenuItem value=\"sm\">sm</MenuItem>\r\n                <MenuItem value=\"md\">md</MenuItem>\r\n                <MenuItem value=\"lg\">lg</MenuItem>\r\n                <MenuItem value=\"xl\">xl</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControlLabel\r\n              control={<Switch checked={fullWidth} onChange={handleFullWidthChange} />}\r\n              label=\"Full width\"\r\n              sx={{ mt: 1 }}\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} variant=\"contained\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import { forwardRef, useState } from 'react';\r\n// material\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {\r\n  List,\r\n  Slide,\r\n  Button,\r\n  Dialog,\r\n  AppBar,\r\n  Toolbar,\r\n  Divider,\r\n  ListItem,\r\n  IconButton,\r\n  Typography,\r\n  ListItemText\r\n} from '@material-ui/core';\r\n//\r\nimport { MButton } from '../../../../components/@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\nexport default function FullScreenDialogs() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MButton variant=\"outlined\" color=\"error\" onClick={handleClickOpen}>\r\n        Full Screen Dialogs\r\n      </MButton>\r\n\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar position=\"relative\">\r\n          <Toolbar>\r\n            <IconButton color=\"inherit\" edge=\"start\" onClick={handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" sx={{ flex: 1, ml: 2 }}>\r\n              Sound\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              Save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n\r\n          <Divider />\r\n\r\n          <ListItem button>\r\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import { forwardRef, useState } from 'react';\r\n// material\r\nimport { Slide, Dialog, Button, DialogTitle, DialogActions, DialogContent, DialogContentText } from '@material-ui/core';\r\n//\r\nimport { MButton } from '../../../../components/@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\nexport default function TransitionsDialogs() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MButton variant=\"outlined\" color=\"success\" onClick={handleClickOpen}>\r\n        Transitions Dialogs\r\n      </MButton>\r\n\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">Use Google's location service?</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to Google, even when no\r\n            apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"inherit\" onClick={handleClose}>\r\n            Disagree\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleClose}>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, Grid, Container } from '@material-ui/core';\r\n// routes\r\nimport { PATH_PAGE } from '../../../../routes/paths';\r\n// components\r\nimport Page from '../../../../components/Page';\r\nimport HeaderBreadcrumbs from '../../../../components/HeaderBreadcrumbs';\r\n//\r\nimport FormDialogs from './FormDialogs';\r\nimport AlertDialog from './AlertDialog';\r\nimport ScrollDialog from './ScrollDialog';\r\nimport SimpleDialogs from './SimpleDialogs';\r\nimport MaxWidthDialog from './MaxWidthDialog';\r\nimport FullScreenDialogs from './FullScreenDialogs';\r\nimport TransitionsDialogs from './TransitionsDialogs';\r\n//\r\nimport { Block } from '../../Block';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst style = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center'\r\n};\r\n\r\nconst RootStyle = styled(Page)(({ theme }) => ({\r\n  paddingTop: theme.spacing(11),\r\n  paddingBottom: theme.spacing(15)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function DialogComponent() {\r\n  return (\r\n    <RootStyle title=\"Components: Dialog | Minimal-UI\">\r\n      <Box\r\n        sx={{\r\n          pt: 6,\r\n          pb: 1,\r\n          mb: 10,\r\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800')\r\n        }}\r\n      >\r\n        <Container maxWidth=\"lg\">\r\n          <HeaderBreadcrumbs\r\n            heading=\"Dialog\"\r\n            links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'Dialog' }]}\r\n            moreLink=\"https://next.material-ui.com/components/dialogs\"\r\n          />\r\n        </Container>\r\n      </Box>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={4}>\r\n            <Block title=\"Simple\" sx={style}>\r\n              <SimpleDialogs />\r\n            </Block>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={4}>\r\n            <Block title=\"Alerts\" sx={style}>\r\n              <AlertDialog />\r\n            </Block>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={4}>\r\n            <Block title=\"Transitions\" sx={style}>\r\n              <TransitionsDialogs />\r\n            </Block>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={4}>\r\n            <Block title=\"Form\" sx={style}>\r\n              <FormDialogs />\r\n            </Block>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={4}>\r\n            <Block title=\"Full Screen\" sx={style}>\r\n              <FullScreenDialogs />\r\n            </Block>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={4}>\r\n            <Block title=\"Max Width Dialog\" sx={style}>\r\n              <MaxWidthDialog />\r\n            </Block>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={4}>\r\n            <Block title=\"Scrolling Content Dialogs\" sx={style}>\r\n              <ScrollDialog />\r\n            </Block>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n"],"sourceRoot":""}